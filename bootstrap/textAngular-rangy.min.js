





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-81a59bf26d881d29286674f6deefe779c444382fff322085b50ba455460ccae5.css" integrity="sha256-gaWb8m2IHSkoZnT23u/necREOC//MiCFtQukVUYMyuU=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-bf92078463fbaccc99b6cbeb3f7d032866dbbe4d3977f7f47c3b403b8598dda8.css" integrity="sha256-v5IHhGP7rMyZtsvrP30DKGbbvk05d/f0fDtAO4WY3ag=" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>nhuuhuy.github.io/textAngular-rangy.min.js at master · nhuuhuy/nhuuhuy.github.io</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars2.githubusercontent.com/u/26504396?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="nhuuhuy/nhuuhuy.github.io" property="og:title" /><meta content="https://github.com/nhuuhuy/nhuuhuy.github.io" property="og:url" /><meta content="Contribute to nhuuhuy.github.io development by creating an account on GitHub." property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MTYxMTI1ODg4OjJhYzM3ZGNhY2Q3OTZmNDJiMmRlMDdjNmZjZWU5MWQxY2M2MDY2OTNkODY1ZDhkMWQyNzk2ZWVhNTQxY2ZhMTI=--d80cf445878f6656030399b711e6e2537cbf068a">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="D5CF:2A175:45D02BC:6EBEC7B:591C7971" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="D5CF:2A175:45D02BC:6EBEC7B:591C7971" name="octolytics-dimension-request_id" /><meta content="26504394" name="octolytics-actor-id" /><meta content="ntdthuong" name="octolytics-actor-login" /><meta content="cf369ee58bc6a7ee4edc6bc1a566518949e0cc2e242b79ed4bfaa24fec0d779c" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
  <meta name="user-login" content="ntdthuong">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="ZWQ0ZjY2NmZhNTI2M2RjNGIwZGFhNDg4NjZkOTIwZTQwMDI4MjM3NjY3ZjA3NjU4N2UwN2VhMGEyOTQyZjdiM3x7InJlbW90ZV9hZGRyZXNzIjoiMTcxLjIzNS42MC4xNjkiLCJyZXF1ZXN0X2lkIjoiRDVDRjoyQTE3NTo0NUQwMkJDOjZFQkVDN0I6NTkxQzc5NzEiLCJ0aW1lc3RhbXAiOjE0OTUwMzgzMjEsImhvc3QiOiJnaXRodWIuY29tIn0=">


  <meta name="html-safe-nonce" content="4740b807cf965edb180c256aadbfd67fd69f805b">

  <meta http-equiv="x-pjax-version" content="93a7fdefece400510fd03592dfd57d6a">
  

    
  <meta name="description" content="Contribute to nhuuhuy.github.io development by creating an account on GitHub.">
  <meta name="go-import" content="github.com/nhuuhuy/nhuuhuy.github.io git https://github.com/nhuuhuy/nhuuhuy.github.io.git">

  <meta content="26504396" name="octolytics-dimension-user_id" /><meta content="nhuuhuy" name="octolytics-dimension-user_login" /><meta content="87444456" name="octolytics-dimension-repository_id" /><meta content="nhuuhuy/nhuuhuy.github.io" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="87444456" name="octolytics-dimension-repository_network_root_id" /><meta content="nhuuhuy/nhuuhuy.github.io" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/nhuuhuy/nhuuhuy.github.io/commits/master.atom" rel="alternate" title="Recent Commits to nhuuhuy.github.io:master" type="application/atom+xml">


    <link rel="canonical" href="https://github.com/nhuuhuy/nhuuhuy.github.io/blob/master/plugin/textAngular-rangy.min.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-in env-production page-blob">
    



  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<div class="header" role="banner">
  <div class="container clearfix">
    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/nhuuhuy/nhuuhuy.github.io/search" class="js-site-search-form" data-scoped-search-url="/nhuuhuy/nhuuhuy.github.io/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/nhuuhuy/nhuuhuy.github.io/blob/master/plugin/textAngular-rangy.min.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    

  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create new…"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="nhuuhuy/nhuuhuy.github.io">This repository</span>
  </div>
    <a class="dropdown-item" href="/nhuuhuy/nhuuhuy.github.io/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/ntdthuong"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@ntdthuong" class="avatar" src="https://avatars3.githubusercontent.com/u/26504394?v=3&amp;s=40" height="20" width="20">
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">ntdthuong</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/ntdthuong" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/ntdthuong?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
          <a class="dropdown-item" href="/integrations" data-ga-click="Header, go to integrations, text:integrations">
            Integrations
          </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="eMldu4+RteZ+N9Iyim+FVCJwpk8XMYXsF5OjigrtA6IjX8AyWFx9IWzvpEsCVf0Ha5hYnSy0KGLDwCtgA0ANHw==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only right-0" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="keIR9uIePulfLeZ9M5+TceHlXdBZcFihd0dZQwmdh0XKdIx/NdP2Lk31kAS7pesiqA2jAmL19S+jFNGpADCJ+A==" /></div>
      <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
        Sign out
      </button>
</form>  </div>
</div>


      

  </div>

  <div id="start-of-content" class="accessibility-aid"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
        



    <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
      <div class="container repohead-details-container">

        <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="VjsxgDrDNx2QoWrMJ0E/RZ+lexQP1+bp44bC2K6qMw/typ3GIiGp5QgHsdv8+7tmJLmJ4E8MZ7sgLAuz0aJEhQ==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="87444456" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/nhuuhuy/nhuuhuy.github.io/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
            <a class="social-count js-social-count"
              href="/nhuuhuy/nhuuhuy.github.io/watchers"
              aria-label="0 users are watching this repository">
              0
            </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/nhuuhuy/nhuuhuy.github.io/unstar" class="starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Q1LWlgm0qTZNWM6RzjxDqjJ1c3D5rzM0onz5BaoyGw9nTLsLgyLJejNUlf53oY3exLyfkaga46LEoDUcUlFPAQ==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar nhuuhuy/nhuuhuy.github.io"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/nhuuhuy/nhuuhuy.github.io/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/nhuuhuy/nhuuhuy.github.io/star" class="unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="RBIFs+xPXUuzuo8A22VJ7DmSnN8L2ENsQQLZEh4zI3sKHFB7DO+Igf9POaVwHJrOzQrcdCHPVC3SlIeoBpt59g==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star nhuuhuy/nhuuhuy.github.io"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/nhuuhuy/nhuuhuy.github.io/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/nhuuhuy/nhuuhuy.github.io/fork" class="btn-with-count" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="SaN3HiQUtp+VFiEQqwCCaSH9kmudM4Y5GOLeZoCzyBXTCQaAlzgbz79az+ccXTgeaOVNzUCUsXndk9BTeBLyiQ==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of nhuuhuy/nhuuhuy.github.io to your account"
                aria-label="Fork your own copy of nhuuhuy/nhuuhuy.github.io to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/nhuuhuy/nhuuhuy.github.io/network" class="social-count"
       aria-label="0 users forked this repository">
      0
    </a>
  </li>
</ul>

        <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/nhuuhuy" class="url fn" rel="author">nhuuhuy</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/nhuuhuy/nhuuhuy.github.io" data-pjax="#js-repo-pjax-container">nhuuhuy.github.io</a></strong>

</h1>

      </div>
      <div class="container">
        
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/nhuuhuy/nhuuhuy.github.io" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /nhuuhuy/nhuuhuy.github.io" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/nhuuhuy/nhuuhuy.github.io/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /nhuuhuy/nhuuhuy.github.io/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">0</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/nhuuhuy/nhuuhuy.github.io/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /nhuuhuy/nhuuhuy.github.io/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/nhuuhuy/nhuuhuy.github.io/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /nhuuhuy/nhuuhuy.github.io/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a href="/nhuuhuy/nhuuhuy.github.io/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /nhuuhuy/nhuuhuy.github.io/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>


  <a href="/nhuuhuy/nhuuhuy.github.io/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /nhuuhuy/nhuuhuy.github.io/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
    Pulse
</a>
  <a href="/nhuuhuy/nhuuhuy.github.io/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /nhuuhuy/nhuuhuy.github.io/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Graphs
</a>

</nav>

      </div>
    </div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    
          

<a href="/nhuuhuy/nhuuhuy.github.io/blob/be4d9a7a4f3a9da141274bb7ad931233a215ec6f/plugin/textAngular-rangy.min.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:31538ceabeedf7bbb37540fb1c773ece -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/nhuuhuy/nhuuhuy.github.io/blob/master/plugin/textAngular-rangy.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="/nhuuhuy/nhuuhuy.github.io/find/master"
          class="js-pjax-capture-input btn btn-sm BtnGroup-item"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/nhuuhuy/nhuuhuy.github.io"><span>nhuuhuy.github.io</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/nhuuhuy/nhuuhuy.github.io/tree/master/plugin"><span>plugin</span></a></span><span class="separator">/</span><strong class="final-path">textAngular-rangy.min.js</strong>
  </div>
</div>


<include-fragment class="commit-tease" src="/nhuuhuy/nhuuhuy.github.io/contributors/master/plugin/textAngular-rangy.min.js">
  <div>
    Fetching contributors&hellip;
  </div>

  <div class="commit-tease-contributors">
    <img alt="" class="loader-loading float-left" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" />
    <span class="loader-error">Cannot retrieve contributors at this time</span>
  </div>
</include-fragment>
<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/nhuuhuy/nhuuhuy.github.io/raw/master/plugin/textAngular-rangy.min.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/nhuuhuy/nhuuhuy.github.io/blame/master/plugin/textAngular-rangy.min.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/nhuuhuy/nhuuhuy.github.io/commits/master/plugin/textAngular-rangy.min.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/nhuuhuy/nhuuhuy.github.io/edit/master/plugin/textAngular-rangy.min.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="FUMYhKyRuNGHATfrb5N/yuqbA7AN4uvJvEME2EAgPfK33CbiNRdvo5y/NQzv2piAV7VgUsIA/g/UiNQg84eSAQ==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/nhuuhuy/nhuuhuy.github.io/delete/master/plugin/textAngular-rangy.min.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Lson8/nAEK+Kma3xTAe6DH9IFBkBV2ZOFaV/u/5Q9djcnIoWJd5p3KMKbRuc1SsqlICfRRF6a40hamaewgeoAQ==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      478 lines (471 sloc)
      <span class="file-info-divider"></span>
    72.1 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Rangy, a cross-browser JavaScript range and selection library</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * https://github.com/timdown/rangy</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Copyright 2015, Tim Down</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license.</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Version: 1.3.0</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Build date: 10 May 2015</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> AMD. Register as an anonymous module.</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-en">define</span>(a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node/CommonJS style</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-en">a</span>()<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> No AMD or CommonJS support so we place Rangy in (probably) the global variable</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">rangy</span><span class="pl-k">=</span><span class="pl-en">a</span>()}(<span class="pl-k">function</span>(){<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Trio of functions taken from Peter Michaux&#39;s article:</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">typeof</span> a[b];<span class="pl-k">return</span> c<span class="pl-k">==</span>u<span class="pl-k">||!</span>(c<span class="pl-k">!=</span>t<span class="pl-k">||!</span>a[b])<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>unknown<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>c}function b(a,b){return!(typeof a[b]!=t||!a[b])}function c(a,b){return typeof a[b]!=v}</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Creates a convenience function to save verbose repeated calls to tests functions</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">--</span>;)<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">a</span>(b,c[d]))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}function e(a){return a&amp;&amp;A(a,z)&amp;&amp;C(a,y)}function f(a){return b(a,&quot;body&quot;)?a.body:a.getElementsByTagName(&quot;body&quot;)[0]}function g(b){typeof console!=v&amp;&amp;a(console,&quot;log&quot;)&amp;&amp;console.log(b)}function h(a,b){F&amp;&amp;b?alert(a):g(a)}function i(a){H.initialized=!0,H.supported=!1,h(&quot;Rangy is not supported in this environment. Reason: &quot;+a,H.config.alertOnFail)}function j(a){h(&quot;Rangy warning: &quot;+a,H.config.alertOnWarn)}function k(a){return a.message||a.description||String(a)}</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Initialization</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">l</span>(){<span class="pl-k">if</span>(<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">H</span>.<span class="pl-smi">initialized</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> First, perform basic feature tests</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-en">a</span>(<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createRange<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createRange</span>(),<span class="pl-en">A</span>(b,x)<span class="pl-k">&amp;&amp;</span><span class="pl-en">C</span>(b,w)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>));<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">f</span>(<span class="pl-c1">document</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>h<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">h</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>())<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-en">i</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>No body element found<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span>createTextRange<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">createTextRange</span>(),<span class="pl-en">e</span>(b)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)),<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;!</span>d)<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-en">i</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Neither Range nor TextRange are available<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">H</span>.<span class="pl-smi">initialized</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">H</span>.<span class="pl-smi">features</span><span class="pl-k">=</span>{implementsDomRange<span class="pl-k">:</span>c,implementsTextRange<span class="pl-k">:</span>d};</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Initialize modules</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> j,l;<span class="pl-k">for</span>(<span class="pl-k">var</span> m <span class="pl-k">in</span> <span class="pl-c1">E</span>)(j<span class="pl-k">=</span><span class="pl-c1">E</span>[m])<span class="pl-k">instanceof</span> p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-en">init</span>(j,<span class="pl-c1">H</span>);</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Call init listeners</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">length</span>;n<span class="pl-k">&lt;</span>o;<span class="pl-k">++</span>n)<span class="pl-k">try</span>{<span class="pl-c1">K</span>[n](<span class="pl-c1">H</span>)}<span class="pl-k">catch</span>(a){l<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Rangy init listener threw an exception. Continuing. Detail: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">k</span>(a),<span class="pl-en">g</span>(l)}}}function m(a,b,c){c&amp;&amp;(a+=&quot; in module &quot;+c.name),H.warn(&quot;DEPRECATED: &quot;+a+&quot; is deprecated. Please use &quot;+b+&quot; instead.&quot;)}function n(a,b,c,d){a[b]=function(){return m(b,c,d),a[c].apply(a,G.toArray(arguments))}}function o(a){a=a||window,l();</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Notify listeners</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)<span class="pl-c1">L</span>[b](a)}function p(a,b,c){this.name=a,this.dependencies=b,this.initialized=!1,this.supported=!1,this.initializer=c}function q(a,b,c){var d=new p(a,b,function(b){if(!b.initialized){b.initialized=!0;try{c(H,b),b.supported=!0}catch(b){var d=&quot;Module &#39;&quot;+a+&quot;&#39; failed to load: &quot;+k(b);g(d),b.stack&amp;&amp;g(b.stack)}}});return E[a]=d,d}/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Ensure rangy.rangePrototype and rangy.selectionPrototype are available immediately</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">function r(){}function s(){}var t=&quot;object&quot;,u=&quot;function&quot;,v=&quot;undefined&quot;,w=[&quot;startContainer&quot;,&quot;startOffset&quot;,&quot;endContainer&quot;,&quot;endOffset&quot;,&quot;collapsed&quot;,&quot;commonAncestorContainer&quot;],x=[&quot;setStart&quot;,&quot;setStartBefore&quot;,&quot;setStartAfter&quot;,&quot;setEnd&quot;,&quot;setEndBefore&quot;,&quot;setEndAfter&quot;,&quot;collapse&quot;,&quot;selectNode&quot;,&quot;selectNodeContents&quot;,&quot;compareBoundaryPoints&quot;,&quot;deleteContents&quot;,&quot;extractContents&quot;,&quot;cloneContents&quot;,&quot;insertNode&quot;,&quot;surroundContents&quot;,&quot;cloneRange&quot;,&quot;toString&quot;,&quot;detach&quot;],y=[&quot;boundingHeight&quot;,&quot;boundingLeft&quot;,&quot;boundingTop&quot;,&quot;boundingWidth&quot;,&quot;htmlText&quot;,&quot;text&quot;],z=[&quot;collapse&quot;,&quot;compareEndPoints&quot;,&quot;duplicate&quot;,&quot;moveToElementText&quot;,&quot;parentElement&quot;,&quot;select&quot;,&quot;setEndPoint&quot;,&quot;getBoundingClientRect&quot;],A=d(a),B=d(b),C=d(c),D=[].forEach?function(a,b){a.forEach(b)}:function(a,b){for(var c=0,d=a.length;c&lt;d;++c)b(a[c],c)},E={},F=typeof window!=v&amp;&amp;typeof document!=v,G={isHostMethod:a,isHostObject:b,isHostProperty:c,areHostMethods:A,areHostObjects:B,areHostProperties:C,isTextRange:e,getBody:f,forEach:D},H={version:&quot;1.3.0&quot;,initialized:!1,isBrowser:F,supported:!0,util:G,features:{},modules:E,config:{alertOnFail:!1,alertOnWarn:!1,preferTextRange:!1,autoInitialize:typeof rangyAutoInitialize==v||rangyAutoInitialize}};H.fail=i,H.warn=j;</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add utility extend() method</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">I</span>;({}).<span class="pl-smi">hasOwnProperty</span><span class="pl-k">?</span>(<span class="pl-c1">G</span>.<span class="pl-smi">extend</span><span class="pl-k">=</span><span class="pl-en">I</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e;<span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">in</span> b)<span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(f)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>a[f],e<span class="pl-k">=</span>b[f],c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> e<span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(d,e,<span class="pl-k">!</span><span class="pl-c1">0</span>),a[f]<span class="pl-k">=</span>e);</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Special case for toString, which does not show up in for...in loops in IE &lt;= 8</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toString<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">toString</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">toString</span>),a},<span class="pl-c1">G</span>.<span class="pl-en">createOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-en">I</span>(c,b),a<span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(c,a),c})<span class="pl-k">:</span><span class="pl-en">i</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hasOwnProperty not supported<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test whether we&#39;re in a browser and bail out if not</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-en">i</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Rangy can only run in a browser<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test whether Array.prototype.slice can be relied on for NodeLists and use an alternative toArray() if not</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">F</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>));<span class="pl-k">var</span> c<span class="pl-k">=</span>[].<span class="pl-smi">slice</span>;<span class="pl-k">try</span>{<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">call</span>(<span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>,<span class="pl-c1">0</span>)[<span class="pl-c1">0</span>].<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">a</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">call</span>(a,<span class="pl-c1">0</span>)})}<span class="pl-k">catch</span>(a){}}a<span class="pl-k">||</span>(<span class="pl-en">a</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;<span class="pl-k">++</span>c)b[c]<span class="pl-k">=</span>a[c];<span class="pl-k">return</span> b}),<span class="pl-c1">G</span>.<span class="pl-smi">toArray</span><span class="pl-k">=</span>a}();</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Very simple event handler wrapper function that doesn&#39;t attempt to solve issues such as &quot;this&quot; handling or</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> normalization of event properties</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">J</span>;<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">a</span>(<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>addEventListener<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">J</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-c1">addEventListener</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">:</span><span class="pl-en">a</span>(<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attachEvent<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">J</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,c)}<span class="pl-k">:</span><span class="pl-en">i</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Document does not have required addEventListener or attachEvent method<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">G</span>.<span class="pl-smi">addListener</span><span class="pl-k">=</span><span class="pl-c1">J</span>);<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span>[];<span class="pl-c1">G</span>.<span class="pl-smi">deprecationNotice</span><span class="pl-k">=</span>m,<span class="pl-c1">G</span>.<span class="pl-smi">createAliasForDeprecatedMethod</span><span class="pl-k">=</span>n,</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Allow external scripts to initialize this library in case it&#39;s loaded after the document has loaded</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-smi">init</span><span class="pl-k">=</span>l,</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Execute listener immediately if already initialized</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-en">addInitListener</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-smi">initialized</span><span class="pl-k">?</span><span class="pl-en">a</span>(<span class="pl-c1">H</span>)<span class="pl-k">:</span><span class="pl-c1">K</span>.<span class="pl-c1">push</span>(a)};<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span>[];<span class="pl-c1">H</span>.<span class="pl-en">addShimListener</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">L</span>.<span class="pl-c1">push</span>(a)},<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">H</span>.<span class="pl-smi">shim</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-smi">createMissingNativeApi</span><span class="pl-k">=</span>o,<span class="pl-en">n</span>(<span class="pl-c1">H</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createMissingNativeApi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>shim<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">p</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a,b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dependencies</span><span class="pl-k">||</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>d){<span class="pl-k">if</span>(b<span class="pl-k">=</span>c[d],a<span class="pl-k">=</span><span class="pl-c1">E</span>[b],<span class="pl-k">!</span>(a<span class="pl-k">&amp;&amp;</span>a <span class="pl-k">instanceof</span> p))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>required module &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; not found<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">init</span>(),<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">supported</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>required module &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; not supported<span class="pl-pds">&quot;</span></span>)}</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Now run initializer</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">initializer</span>(<span class="pl-c1">this</span>)},<span class="pl-en">fail</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">throw</span> <span class="pl-c1">this</span>.<span class="pl-smi">initialized</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">supported</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">new</span> <span class="pl-en">Error</span>(a)},<span class="pl-en">warn</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Module <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a)},<span class="pl-en">deprecationNotice</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">H</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DEPRECATED: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> in module <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> is deprecated. Please use <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> instead<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">createError</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Error in Rangy <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> module: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a)}},<span class="pl-c1">H</span>.<span class="pl-en">createModule</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Allow 2 or 3 arguments (second argument is an optional array of dependencies)</span></td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b,c;<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">1</span>],c<span class="pl-k">=</span>[])<span class="pl-k">:</span>(b<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">2</span>],c<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">1</span>]);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">q</span>(a,c,b);</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Initialize the module immediately if the core is already initialized</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-smi">initialized</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">H</span>.<span class="pl-smi">supported</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">init</span>()},<span class="pl-c1">H</span>.<span class="pl-en">createCoreModule</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">q</span>(a,b,c)},<span class="pl-c1">H</span>.<span class="pl-smi">RangePrototype</span><span class="pl-k">=</span>r,<span class="pl-c1">H</span>.<span class="pl-smi">rangePrototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">r</span>,<span class="pl-c1">H</span>.<span class="pl-smi">selectionPrototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">s</span>,<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> DOM utility methods used by Rangy</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-en">createCoreModule</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DomUtil<span class="pl-pds">&quot;</span></span>,[],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Opera 11 puts HTML elements in the null namespace, it seems, and IE 7 has undefined namespaceURI</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-k">return</span> <span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-c1">namespaceURI</span><span class="pl-k">==</span><span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">namespaceURI</span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>b}function d(a){var b=a.parentNode;return 1==b.nodeType?b:null}function e(a){for(var b=0;a=a.previousSibling;)++b;return b}function f(a){switch(a.nodeType){case 7:case 10:return 0;case 3:case 8:return a.length;default:return a.childNodes.length}}function g(a,b){var c,d=[];for(c=a;c;c=c.parentNode)d.push(c);for(c=b;c;c=c.parentNode)if(K(d,c))return c;return null}function h(a,b,c){for(var d=c?b:b.parentNode;d;){if(d===a)return!0;d=d.parentNode}return!1}function i(a,b){return h(a,b,!0)}function j(a,b,c){for(var d,e=c?a:a.parentNode;e;){if(d=e.parentNode,d===b)return e;e=d}return null}function k(a){var b=a.nodeType;return 3==b||4==b||8==b}function l(a){if(!a)return!1;var b=a.nodeType;return 3==b||8==b}function m(a,b){var c=b.nextSibling,d=b.parentNode;return c?d.insertBefore(a,c):d.appendChild(a),a}</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note that we cannot use splitText() because it is bugridden in IE 9.</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">n</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Preserve positions</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">deleteData</span>(<span class="pl-c1">0</span>,b),<span class="pl-smi">a</span>.<span class="pl-c1">deleteData</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>b),<span class="pl-en">m</span>(d,a),c)<span class="pl-k">for</span>(<span class="pl-k">var</span> f,g<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">=</span>c[g<span class="pl-k">++</span>];)</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Handle case where position was inside the portion of node after the split point</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-smi">node</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">offset</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-smi">node</span><span class="pl-k">=</span>d,<span class="pl-smi">f</span>.<span class="pl-smi">offset</span><span class="pl-k">-=</span>b)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">node</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">offset</span><span class="pl-k">&gt;</span><span class="pl-en">e</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-k">++</span><span class="pl-smi">f</span>.<span class="pl-smi">offset</span>;<span class="pl-k">return</span> d}function o(a){if(9==a.nodeType)return a;if(typeof a.ownerDocument!=F)return a.ownerDocument;if(typeof a.document!=F)return a.document;if(a.parentNode)return o(a.parentNode);throw b.createError(&quot;getDocument: no document found for node&quot;)}function p(a){var c=o(a);if(typeof c.defaultView!=F)return c.defaultView;if(typeof c.parentWindow!=F)return c.parentWindow;throw b.createError(&quot;Cannot get a window object for node&quot;)}function q(a){if(typeof a.contentDocument!=F)return a.contentDocument;if(typeof a.contentWindow!=F)return a.contentWindow.document;throw b.createError(&quot;getIframeDocument: No Document object found for iframe element&quot;)}function r(a){if(typeof a.contentWindow!=F)return a.contentWindow;if(typeof a.contentDocument!=F)return a.contentDocument.defaultView;throw b.createError(&quot;getIframeWindow: No Window object found for iframe element&quot;)}</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This looks bad. Is it worth it?</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">s</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>.<span class="pl-en">isHostMethod</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>setTimeout<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>.<span class="pl-en">isHostObject</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>document<span class="pl-pds">&quot;</span></span>)}function t(a,b,c){var d;if(a?G.isHostProperty(a,&quot;nodeType&quot;)?d=1==a.nodeType&amp;&amp;&quot;iframe&quot;==a.tagName.toLowerCase()?q(a):o(a):s(a)&amp;&amp;(d=a.document):d=document,!d)throw b.createError(c+&quot;(): Parameter must be a Window object or DOM node&quot;);return d}function u(a){for(var b;b=a.parentNode;)a=b;return a}function v(a,c,d,f){</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> h,i,k,l,m;<span class="pl-k">if</span>(a<span class="pl-k">==</span>d)</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Case 1: nodes are the same</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c<span class="pl-k">===</span>f<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c<span class="pl-k">&lt;</span>f<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-en">j</span>(d,a,<span class="pl-k">!</span><span class="pl-c1">0</span>))</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Case 2: node C (container B or an ancestor) is a child node of A</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c<span class="pl-k">&lt;=</span><span class="pl-en">e</span>(h)<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-en">j</span>(a,d,<span class="pl-k">!</span><span class="pl-c1">0</span>))</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Case 3: node C (container A or an ancestor) is a child node of B</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-en">e</span>(h)<span class="pl-k">&lt;</span>f<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(i<span class="pl-k">=</span><span class="pl-en">g</span>(a,d),<span class="pl-k">!</span>i)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>comparePoints error: nodes have no common ancestor<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Case 4: containers are siblings or descendants of siblings</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span>a<span class="pl-k">===</span>i<span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-en">j</span>(a,i,<span class="pl-k">!</span><span class="pl-c1">0</span>),l<span class="pl-k">=</span>d<span class="pl-k">===</span>i<span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-en">j</span>(d,i,<span class="pl-k">!</span><span class="pl-c1">0</span>),k<span class="pl-k">===</span>l)</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This shouldn&#39;t be possible</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-k">throw</span> <span class="pl-smi">b</span>.<span class="pl-en">createError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>comparePoints got to case 4 and childA and childB are the same!<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">firstChild</span>;m;){<span class="pl-k">if</span>(m<span class="pl-k">===</span>k)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(m<span class="pl-k">===</span>l)<span class="pl-k">return</span> <span class="pl-c1">1</span>;m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">nextSibling</span>}}function w(a){var b;try{return b=a.parentNode,!1}catch(a){return!0}}/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">x</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>[No node]<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">L</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">w</span>(a))<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>[Broken node]<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-en">k</span>(a))<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&#39;</span> id=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;[index:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">e</span>(a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,length:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>][<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>[innerHTML not supported]<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">25</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>}function y(a){for(var b,c=o(a).createDocumentFragment();b=a.firstChild;)c.appendChild(b);return c}function z(a,b,c){var d=H(a),e=a.createElement(&quot;div&quot;);e.contentEditable=&quot;&quot;+!!c,b&amp;&amp;(e.innerHTML=b);</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Insert the test element at the start of the body to prevent scrolling to the bottom in iOS (issue #292)</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">firstChild</span>;<span class="pl-k">return</span> f<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">insertBefore</span>(e,f)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">appendChild</span>(e),e}function A(a){return a.parentNode.removeChild(a)}function B(a){this.root=a,this._next=a}function C(a){return new B(a)}function D(a,b){this.node=a,this.offset=b}function E(a){this.code=this[a],this.codeName=a,this.message=&quot;DOMException: &quot;+this.codeName}var F=&quot;undefined&quot;,G=a.util,H=G.getBody;</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Perform feature tests</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">G</span>.<span class="pl-en">areHostMethods</span>(<span class="pl-c1">document</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>createDocumentFragment<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createElement<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createTextNode<span class="pl-pds">&quot;</span></span>])<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>document missing a Node creation method<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">G</span>.<span class="pl-en">isHostMethod</span>(<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getElementsByTagName<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>document missing getElementsByTagName method<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">G</span>.<span class="pl-en">areHostMethods</span>(<span class="pl-c1">I</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>insertBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>appendChild<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cloneNode<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||!</span><span class="pl-c1">G</span>.<span class="pl-en">areHostObjects</span>(<span class="pl-c1">I</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>previousSibling<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nextSibling<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>childNodes<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>parentNode<span class="pl-pds">&quot;</span></span>]))<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Incomplete Element implementation<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> innerHTML is required for Range&#39;s createContextualFragment method</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">G</span>.<span class="pl-en">isHostProperty</span>(<span class="pl-c1">I</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>innerHTML<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Element is missing innerHTML property<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>test<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">G</span>.<span class="pl-en">areHostMethods</span>(<span class="pl-c1">J</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>splitText<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>deleteData<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>insertData<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>appendData<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cloneNode<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||!</span><span class="pl-c1">G</span>.<span class="pl-en">areHostObjects</span>(<span class="pl-c1">I</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>previousSibling<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nextSibling<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>childNodes<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>parentNode<span class="pl-pds">&quot;</span></span>])<span class="pl-k">||!</span><span class="pl-c1">G</span>.<span class="pl-en">areHostProperties</span>(<span class="pl-c1">J</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>data<span class="pl-pds">&quot;</span></span>]))<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Incomplete Text Node implementation<span class="pl-pds">&quot;</span></span>);<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Removed use of indexOf because of a bizarre bug in Opera that is thrown in one of the Acid3 tests. I haven&#39;t been</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> able to replicate it outside of the test. The bug is that indexOf returns -1 when called on an Array that</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> contains just the document as a single element and the value searched for is the document.</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c">/*Array.prototype.indexOf ?</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            function(arr, val) {</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                return arr.indexOf(val) &gt; -1;</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }:*/</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">function(a,b){for(var c=a.length;c--;)if(a[c]===b)return!0;return!1},L=!1;!function(){var b=document.createElement(&quot;b&quot;);b.innerHTML=&quot;1&quot;;var c=b.firstChild;b.innerHTML=&quot;&lt;br /&gt;&quot;,L=w(c),a.features.crashyTextNodes=L}();var M;typeof window.getComputedStyle!=F?M=function(a,b){return p(a).getComputedStyle(a,null)[b]}:typeof document.documentElement.currentStyle!=F?M=function(a,b){return a.currentStyle?a.currentStyle[b]:&quot;&quot;}:b.fail(&quot;No means of obtaining computed style properties found&quot;),B.prototype={_current:null,hasNext:function(){return!!this._next},next:function(){var a,b,c=this._current=this._next;if(this._current)if(a=c.firstChild)this._next=a;else{for(b=null;c!==this.root&amp;&amp;!(b=c.nextSibling);)c=c.parentNode;this._next=b}return this._current},detach:function(){this._current=this._next=this.root=null}},D.prototype={equals:function(a){return!!a&amp;&amp;this.node===a.node&amp;&amp;this.offset==a.offset},inspect:function(){return&quot;[DomPosition(&quot;+x(this.node)+&quot;:&quot;+this.offset+&quot;)]&quot;},toString:function(){return this.inspect()}},E.prototype={INDEX_SIZE_ERR:1,HIERARCHY_REQUEST_ERR:3,WRONG_DOCUMENT_ERR:4,NO_MODIFICATION_ALLOWED_ERR:7,NOT_FOUND_ERR:8,NOT_SUPPORTED_ERR:9,INVALID_STATE_ERR:11,INVALID_NODE_TYPE_ERR:24},E.prototype.toString=function(){return this.message},a.dom={arrayContains:K,isHtmlNamespace:c,parentElement:d,getNodeIndex:e,getNodeLength:f,getCommonAncestor:g,isAncestorOf:h,isOrIsAncestorOf:i,getClosestAncestorIn:j,isCharacterDataNode:k,isTextOrCommentNode:l,insertAfter:m,splitDataNode:n,getDocument:o,getWindow:p,getIframeWindow:r,getIframeDocument:q,getBody:H,isWindow:s,getContentDocument:t,getRootContainer:u,comparePoints:v,isBrokenNode:w,inspectNode:x,getComputedStyleProperty:M,createTestElement:z,removeNode:A,fragmentFromNodeChildren:y,createIterator:C,DomPosition:D},a.DOMException=E}),/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Pure JavaScript implementation of DOM Range</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-en">createCoreModule</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DomRange<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>DomUtil<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Utility functions</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">3</span><span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">P</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">startContainer</span>)<span class="pl-k">||</span><span class="pl-en">P</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">endContainer</span>))}function d(a){return a.document||Q(a.startContainer)}function e(a){return W(a.startContainer)}function f(a){return new L(a.parentNode,O(a))}function g(a){return new L(a.parentNode,O(a)+1)}function h(a,b,c){var d=11==a.nodeType?a.firstChild:a;return N(b)?c==b.length?J.insertAfter(a,b):b.parentNode.insertBefore(a,0==c?b:S(b,c)):c&gt;=b.childNodes.length?b.appendChild(a):b.insertBefore(a,b.childNodes[c]),d}function i(a,b,c){if(z(a),z(b),d(b)!=d(a))throw new M(&quot;WRONG_DOCUMENT_ERR&quot;);var e=R(a.startContainer,a.startOffset,b.endContainer,b.endOffset),f=R(a.endContainer,a.endOffset,b.startContainer,b.startOffset);return c?e&lt;=0&amp;&amp;f&gt;=0:e&lt;0&amp;&amp;f&gt;0}function j(a){for(var b,c,e,f=d(a.range).createDocumentFragment();c=a.next();){if(b=a.isPartiallySelectedSubtree(),c=c.cloneNode(!b),b&amp;&amp;(e=a.getSubtreeIterator(),c.appendChild(j(e)),e.detach()),10==c.nodeType)// DocumentType</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>HIERARCHY_REQUEST_ERR<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-c1">appendChild</span>(c)}<span class="pl-k">return</span> f}function k(a,b,c){var d,e;c=c||{stop:!1};for(var f,g;f=a.next();)if(a.isPartiallySelectedSubtree()){if(b(f)===!1)return void(c.stop=!0);if(</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The node is partially selected by the Range, so we can use a new RangeIterator on the portion of</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the node selected by the Range.</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getSubtreeIterator</span>(),<span class="pl-en">k</span>(g,b,c),<span class="pl-smi">g</span>.<span class="pl-c1">detach</span>(),<span class="pl-smi">c</span>.<span class="pl-smi">stop</span>)<span class="pl-k">return</span>}<span class="pl-k">else</span> <span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The whole node is selected, so we can use efficient DOM iteration to iterate over the node and its</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> descendants</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">createIterator</span>(f);e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">next</span>();)<span class="pl-k">if</span>(<span class="pl-en">b</span>(e)<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-k">void</span>(<span class="pl-smi">c</span>.<span class="pl-smi">stop</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}function l(a){for(var b;a.next();)a.isPartiallySelectedSubtree()?(b=a.getSubtreeIterator(),l(b),b.detach()):a.remove()}function m(a){for(var b,c,e=d(a.range).createDocumentFragment();b=a.next();){if(a.isPartiallySelectedSubtree()?(b=b.cloneNode(!1),c=a.getSubtreeIterator(),b.appendChild(m(c)),c.detach()):a.remove(),10==b.nodeType)// DocumentType</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>HIERARCHY_REQUEST_ERR<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">e</span>.<span class="pl-c1">appendChild</span>(b)}<span class="pl-k">return</span> e}function n(a,b,c){var d,e=!(!b||!b.length),f=!!c;e&amp;&amp;(d=new RegExp(&quot;^(&quot;+b.join(&quot;|&quot;)+&quot;)$&quot;));var g=[];return k(new p(a,!1),function(b){if((!e||d.test(b.nodeType))&amp;&amp;(!f||c(b))){</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Don&#39;t include a boundary container if it is a character data node and the range does not contain any</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> of its character data. See issue 190.</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span>;<span class="pl-k">if</span>(b<span class="pl-k">!=</span>h<span class="pl-k">||!</span><span class="pl-en">N</span>(h)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">startOffset</span><span class="pl-k">!=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">endContainer</span>;b<span class="pl-k">==</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-en">N</span>(i)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-smi">endOffset</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(b)}}}),g}function o(a){var b=&quot;undefined&quot;==typeof a.getName?&quot;Range&quot;:a.getName();return&quot;[&quot;+b+&quot;(&quot;+J.inspectNode(a.startContainer)+&quot;:&quot;+a.startOffset+&quot;, &quot;+J.inspectNode(a.endContainer)+&quot;:&quot;+a.endOffset+&quot;)]&quot;}/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> RangeIterator code partially borrows from IERange by Tim Ryan (http://github.com/timcameronryan/IERange)</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">function p(a,b){if(this.range=a,this.clonePartiallySelectedTextNodes=b,!a.collapsed){this.sc=a.startContainer,this.so=a.startOffset,this.ec=a.endContainer,this.eo=a.endOffset;var c=a.commonAncestorContainer;this.sc===this.ec&amp;&amp;N(this.sc)?(this.isSingleCharacterDataNode=!0,this._first=this._last=this._next=this.sc):(this._first=this._next=this.sc!==c||N(this.sc)?T(this.sc,c,!0):this.sc.childNodes[this.so],this._last=this.ec!==c||N(this.ec)?T(this.ec,c,!0):this.ec.childNodes[this.eo-1])}}function q(a){return function(b,c){for(var d,e=c?b:b.parentNode;e;){if(d=e.nodeType,V(a,d))return e;e=e.parentNode}return null}}function r(a,b){if(ea(a,b))throw new M(&quot;INVALID_NODE_TYPE_ERR&quot;)}function s(a,b){if(!V(b,a.nodeType))throw new M(&quot;INVALID_NODE_TYPE_ERR&quot;)}function t(a,b){if(b&lt;0||b&gt;(N(a)?a.length:a.childNodes.length))throw new M(&quot;INDEX_SIZE_ERR&quot;)}function u(a,b){if(ca(a,!0)!==ca(b,!0))throw new M(&quot;WRONG_DOCUMENT_ERR&quot;)}function v(a){if(da(a,!0))throw new M(&quot;NO_MODIFICATION_ALLOWED_ERR&quot;)}function w(a,b){if(!a)throw new M(b)}function x(a,b){return b&lt;=(N(a)?a.length:a.childNodes.length)}function y(a){return!!a.startContainer&amp;&amp;!!a.endContainer&amp;&amp;!(X&amp;&amp;(J.isBrokenNode(a.startContainer)||J.isBrokenNode(a.endContainer)))&amp;&amp;W(a.startContainer)==W(a.endContainer)&amp;&amp;x(a.startContainer,a.startOffset)&amp;&amp;x(a.endContainer,a.endOffset)}function z(a){if(!y(a))throw new Error(&quot;Range error: Range is not valid. This usually happens after DOM mutation. Range: (&quot;+a.inspect()+&quot;)&quot;)}function A(a,b){z(a);var c=a.startContainer,d=a.startOffset,e=a.endContainer,f=a.endOffset,g=c===e;N(e)&amp;&amp;f&gt;0&amp;&amp;f&lt;e.length&amp;&amp;S(e,f,b),N(c)&amp;&amp;d&gt;0&amp;&amp;d&lt;c.length&amp;&amp;(c=S(c,d,b),g?(f-=d,e=c):e==c.parentNode&amp;&amp;f&gt;=O(c)&amp;&amp;f++,d=0),a.setStartAndEnd(c,d,e,f)}function B(a){z(a);var b=a.commonAncestorContainer.parentNode.cloneNode(!1);return b.appendChild(a.cloneContents()),b.innerHTML}function C(a){a.START_TO_START=ja,a.START_TO_END=ka,a.END_TO_END=la,a.END_TO_START=ma,a.NODE_BEFORE=na,a.NODE_AFTER=oa,a.NODE_BEFORE_AND_AFTER=pa,a.NODE_INSIDE=qa}function D(a){C(a),C(a.prototype)}function E(a,b){return function(){z(this);var c,d,e=this.startContainer,f=this.startOffset,h=this.commonAncestorContainer,i=new p(this,!0);e!==h&amp;&amp;(c=T(e,h,!0),d=g(c),e=d.node,f=d.offset),</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check none of the range is read-only</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-en">k</span>(i,v),<span class="pl-smi">i</span>.<span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Remove the content</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-en">a</span>(i);</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Move to the new position</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-c1">detach</span>(),<span class="pl-en">b</span>(<span class="pl-c1">this</span>,e,f,e,f),j}}function F(b,d){function e(a,b){return function(c){s(c,Z),s(W(c),$);var d=(a?f:g)(c);(b?h:i)(this,d.node,d.offset)}}function h(a,b,c){var e=a.endContainer,f=a.endOffset;b===a.startContainer&amp;&amp;c===a.startOffset||(</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check the root containers of the range and the new boundary, and also check whether the new boundary</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> is after the current end. In either case, collapse the range to the new position</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-en">W</span>(b)<span class="pl-k">==</span><span class="pl-en">W</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-en">R</span>(b,c,e,f)<span class="pl-k">||</span>(e<span class="pl-k">=</span>b,f<span class="pl-k">=</span>c),<span class="pl-en">d</span>(a,b,c,e,f))}function i(a,b,c){var e=a.startContainer,f=a.startOffset;b===a.endContainer&amp;&amp;c===a.endOffset||(</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check the root containers of the range and the new boundary, and also check whether the new boundary</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> is after the current end. In either case, collapse the range to the new position</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-en">W</span>(b)<span class="pl-k">==</span><span class="pl-en">W</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-en">R</span>(b,c,e,f)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>(e<span class="pl-k">=</span>b,f<span class="pl-k">=</span>c),<span class="pl-en">d</span>(a,e,f,b,c))}</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Set up inheritance</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">j</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rangePrototype</span>,<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">j</span>,<span class="pl-c1">K</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">setStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">r</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">t</span>(a,b),<span class="pl-en">h</span>(<span class="pl-c1">this</span>,a,b)},<span class="pl-en">setEnd</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">r</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">t</span>(a,b),<span class="pl-en">i</span>(<span class="pl-c1">this</span>,a,b)},<span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 * Convenience method to set a range&#39;s start and end boundaries. Overloaded as follows:</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 * - Two parameters (node, offset) creates a collapsed range at that position</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 * - Three parameters (node, startOffset, endOffset) creates a range contained with node starting at</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 *   startOffset and ending at endOffset</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 * - Four parameters (startNode, startOffset, endNode, endOffset) creates a range starting at startOffset in</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 *   startNode and ending at endOffset in endNode</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 */</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setStartAndEnd</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">arguments</span>,b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>b,f<span class="pl-k">=</span>c;<span class="pl-k">switch</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span>){<span class="pl-k">case</span> <span class="pl-c1">3</span>:f<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span>:e<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">3</span>]}<span class="pl-en">d</span>(<span class="pl-c1">this</span>,b,c,e,f)},<span class="pl-en">setBoundary</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Start<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>End<span class="pl-pds">&quot;</span></span>)](a,b)},setStartBefore<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),setStartAfter<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),setEndBefore<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),setEndAfter<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-en">collapse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">z</span>(<span class="pl-c1">this</span>),a<span class="pl-k">?</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>)<span class="pl-k">:</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>)},<span class="pl-en">selectNodeContents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">r</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">d</span>(<span class="pl-c1">this</span>,a,<span class="pl-c1">0</span>,a,<span class="pl-en">U</span>(a))},<span class="pl-en">selectNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">r</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-en">s</span>(a,<span class="pl-c1">Z</span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">f</span>(a),c<span class="pl-k">=</span><span class="pl-en">g</span>(a);<span class="pl-en">d</span>(<span class="pl-c1">this</span>,<span class="pl-smi">b</span>.<span class="pl-smi">node</span>,<span class="pl-smi">b</span>.<span class="pl-smi">offset</span>,<span class="pl-smi">c</span>.<span class="pl-smi">node</span>,<span class="pl-smi">c</span>.<span class="pl-smi">offset</span>)},extractContents<span class="pl-k">:</span><span class="pl-en">E</span>(m,d),deleteContents<span class="pl-k">:</span><span class="pl-en">E</span>(l,d),<span class="pl-en">canSurroundContents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>),<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>);</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check if the contents can be surrounded. Specifically, this means whether the range partially selects</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> no non-text nodes.</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line">var a=new p(this,!0),b=a._first&amp;&amp;c(a._first,this)||a._last&amp;&amp;c(a._last,this);return a.detach(),!b},splitBoundaries:function(){A(this)},splitBoundariesPreservingPositions:function(a){A(this,a)},normalizeBoundaries:function(){z(this);var a,b=this.startContainer,c=this.startOffset,e=this.endContainer,f=this.endOffset,g=function(a){var b=a.nextSibling;b&amp;&amp;b.nodeType==a.nodeType&amp;&amp;(e=a,f=a.length,a.appendData(b.data),Y(b))},h=function(a){var d=a.previousSibling;if(d&amp;&amp;d.nodeType==a.nodeType){b=a;var g=a.length;if(c=d.length,a.insertData(0,d.data),Y(d),b==e)f+=c,e=b;else if(e==a.parentNode){var h=O(a);f==h?(e=a,f=g):f&gt;h&amp;&amp;f--}}},i=!0;if(N(e))f==e.length?g(e):0==f&amp;&amp;(a=e.previousSibling,a&amp;&amp;a.nodeType==e.nodeType&amp;&amp;(f=a.length,b==e&amp;&amp;(i=!1),a.appendData(e.data),Y(e),e=a));else{if(f&gt;0){var j=e.childNodes[f-1];j&amp;&amp;N(j)&amp;&amp;g(j)}i=!this.collapsed}if(i){if(N(b))0==c?h(b):c==b.length&amp;&amp;(a=b.nextSibling,a&amp;&amp;a.nodeType==b.nodeType&amp;&amp;(e==a&amp;&amp;(e=b,f+=b.length),b.appendData(a.data),Y(a)));else if(c&lt;b.childNodes.length){var k=b.childNodes[c];k&amp;&amp;N(k)&amp;&amp;h(k)}}else b=e,c=f;d(this,b,c,e,f)},collapseToPoint:function(a,b){r(a,!0),t(a,b),this.setStartAndEnd(a,b)}}),D(b)}/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Updates commonAncestorContainer and collapsed after boundary change</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">G</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">collapsed</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">endContainer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">startOffset</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">endOffset</span>,<span class="pl-smi">a</span>.<span class="pl-smi">commonAncestorContainer</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">collapsed</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span><span class="pl-k">:</span><span class="pl-c1">J</span>.<span class="pl-en">getCommonAncestor</span>(<span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">endContainer</span>)}function H(a,b,c,d,e){a.startContainer=b,a.startOffset=c,a.endContainer=d,a.endOffset=e,a.document=J.getDocument(b),G(a)}function I(a){this.startContainer=a,this.startOffset=0,this.endContainer=a,this.endOffset=0,this.document=a,G(this)}var J=a.dom,K=a.util,L=J.DomPosition,M=a.DOMException,N=J.isCharacterDataNode,O=J.getNodeIndex,P=J.isOrIsAncestorOf,Q=J.getDocument,R=J.comparePoints,S=J.splitDataNode,T=J.getClosestAncestorIn,U=J.getNodeLength,V=J.arrayContains,W=J.getRootContainer,X=a.features.crashyTextNodes,Y=J.removeNode;p.prototype={_current:null,_next:null,_first:null,_last:null,isSingleCharacterDataNode:!1,reset:function(){this._current=null,this._next=this._first},hasNext:function(){return!!this._next},next:function(){</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Move to next node</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check for partially selected text nodes</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_next</span><span class="pl-k">=</span>a<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">_last</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">nextSibling</span><span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-en">N</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">clonePartiallySelectedTextNodes</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">ec</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)).<span class="pl-c1">deleteData</span>(<span class="pl-c1">this</span>.<span class="pl-smi">eo</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">eo</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">sc</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)).<span class="pl-c1">deleteData</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">so</span>))),a},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span>;<span class="pl-k">!</span><span class="pl-en">N</span>(c)<span class="pl-k">||</span>c<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">sc</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">ec</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Y</span>(c)<span class="pl-k">:</span>(a<span class="pl-k">=</span>c<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">sc</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">so</span><span class="pl-k">:</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span>c<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">ec</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">eo</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,a<span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">deleteData</span>(a,b<span class="pl-k">-</span>a))},</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Checks if the current node is partially selected</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isPartiallySelectedSubtree</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span>;<span class="pl-k">return</span> <span class="pl-en">c</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">range</span>)},<span class="pl-en">getSubtreeIterator</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isSingleCharacterDataNode</span>)a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">range</span>.<span class="pl-c1">cloneRange</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">else</span>{a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">I</span>(<span class="pl-en">d</span>(<span class="pl-c1">this</span>.<span class="pl-smi">range</span>));<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span>,c<span class="pl-k">=</span>b,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>b,g<span class="pl-k">=</span><span class="pl-en">U</span>(b);<span class="pl-en">P</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">sc</span>)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sc</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">so</span>),<span class="pl-en">P</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">ec</span>)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ec</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">eo</span>),<span class="pl-en">H</span>(a,c,e,f,g)}<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">p</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">clonePartiallySelectedTextNodes</span>)},<span class="pl-en">detach</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_next</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_first</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_last</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sc</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">so</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ec</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">eo</span><span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">Z</span><span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">10</span>],$<span class="pl-k">=</span>[<span class="pl-c1">2</span>,<span class="pl-c1">9</span>,<span class="pl-c1">11</span>],_<span class="pl-k">=</span>[<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">10</span>,<span class="pl-c1">12</span>],aa<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">10</span>,<span class="pl-c1">11</span>],ba<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>],ca<span class="pl-k">=</span><span class="pl-en">q</span>([<span class="pl-c1">9</span>,<span class="pl-c1">11</span>]),da<span class="pl-k">=</span><span class="pl-en">q</span>(_),ea<span class="pl-k">=</span><span class="pl-en">q</span>([<span class="pl-c1">6</span>,<span class="pl-c1">10</span>,<span class="pl-c1">12</span>]),fa<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>),ga<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">try</span>{<span class="pl-smi">fa</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;b&gt;x&lt;/b&gt;<span class="pl-pds">&quot;</span></span>,ga<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-smi">fa</span>.<span class="pl-c1">firstChild</span>.<span class="pl-c1">nodeType</span>}<span class="pl-k">catch</span>(a){}<span class="pl-smi">a</span>.<span class="pl-smi">features</span>.<span class="pl-smi">htmlParsingConforms</span><span class="pl-k">=</span>ga;<span class="pl-k">var</span> ha<span class="pl-k">=</span>ga<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Implementation as per HTML parsing spec, trusting in the browser&#39;s implementation of innerHTML. See</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> discussion and base code for this implementation at issue 67.</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Spec: http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Thanks to Aleks Williams.</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;Let node the context object&#39;s start&#39;s node.&quot;</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,c<span class="pl-k">=</span><span class="pl-en">Q</span>(b);</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;If the context object&#39;s start&#39;s node is null, raise an INVALID_STATE_ERR</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> exception and abort these steps.&quot;</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INVALID_STATE_ERR<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;Let element be as follows, depending on node&#39;s interface:&quot;</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Document, Document Fragment: null</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;If this raises an exception, then abort these steps. Otherwise, let new</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> children be the nodes returned.&quot;</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;Let fragment be a new DocumentFragment.&quot;</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;Append all new children to fragment.&quot;</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;Return fragment.&quot;</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;Element: node&quot;</span></td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;If either element is null or element&#39;s ownerDocument is an HTML document</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and element&#39;s local name is &quot;html&quot; and element&#39;s namespace is the HTML</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> namespace&quot;</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;let element be a new Element with &quot;body&quot; as its local name and the HTML</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> namespace as its namespace.&quot;&quot;</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;If the node&#39;s document is an HTML document: Invoke the HTML fragment parsing algorithm.&quot;</span></td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;If the node&#39;s document is an XML document: Invoke the XML fragment parsing algorithm.&quot;</span></td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;In either case, the algorithm must be invoked with fragment as the input</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and element as the context element.&quot;</span></td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span>d<span class="pl-k">=</span>b<span class="pl-k">:</span><span class="pl-en">N</span>(b)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">parentElement</span>(b)),d<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTML<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeName</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">J</span>.<span class="pl-en">isHtmlNamespace</span>(<span class="pl-en">Q</span>(d).<span class="pl-c1">documentElement</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">J</span>.<span class="pl-en">isHtmlNamespace</span>(d)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">d</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>a,<span class="pl-c1">J</span>.<span class="pl-en">fragmentFromNodeChildren</span>(d)}<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> In this case, innerHTML cannot be trusted, so fall back to a simpler, non-conformant implementation that</span></td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> previous versions of Rangy used (with the exception of using a body element rather than a div)</span></td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>),c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>a,<span class="pl-c1">J</span>.<span class="pl-en">fragmentFromNodeChildren</span>(c)},ia<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>startContainer<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>startOffset<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>endContainer<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>endOffset<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>collapsed<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>commonAncestorContainer<span class="pl-pds">&quot;</span></span>],ja<span class="pl-k">=</span><span class="pl-c1">0</span>,ka<span class="pl-k">=</span><span class="pl-c1">1</span>,la<span class="pl-k">=</span><span class="pl-c1">2</span>,ma<span class="pl-k">=</span><span class="pl-c1">3</span>,na<span class="pl-k">=</span><span class="pl-c1">0</span>,oa<span class="pl-k">=</span><span class="pl-c1">1</span>,pa<span class="pl-k">=</span><span class="pl-c1">2</span>,qa<span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-c1">K</span>.<span class="pl-en">extend</span>(<span class="pl-smi">a</span>.<span class="pl-smi">rangePrototype</span>,{<span class="pl-en">compareBoundaryPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">u</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">b</span>.<span class="pl-smi">startContainer</span>);<span class="pl-k">var</span> c,d,e,f,g<span class="pl-k">=</span>a<span class="pl-k">==</span>ma<span class="pl-k">||</span>a<span class="pl-k">==</span>ja<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">=</span>a<span class="pl-k">==</span>ka<span class="pl-k">||</span>a<span class="pl-k">==</span>ja<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>[g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Container<span class="pl-pds">&quot;</span></span>],d<span class="pl-k">=</span><span class="pl-c1">this</span>[g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Offset<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span>b[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Container<span class="pl-pds">&quot;</span></span>],f<span class="pl-k">=</span>b[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Offset<span class="pl-pds">&quot;</span></span>],<span class="pl-en">R</span>(c,d,e,f)},<span class="pl-en">insertNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">s</span>(a,aa),<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>),<span class="pl-en">P</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>HIERARCHY_REQUEST_ERR<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> No check for whether the container of the start of the Range is of a type that does not allow</span></td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> children of the type of node: the browser&#39;s DOM implementation should do this for us when we attempt</span></td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to add the node</span></td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">h</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>);<span class="pl-c1">this</span>.<span class="pl-c1">setStartBefore</span>(b)},<span class="pl-en">cloneContents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">z</span>(<span class="pl-c1">this</span>);<span class="pl-k">var</span> a,b;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">collapsed</span>)<span class="pl-k">return</span> <span class="pl-en">d</span>(<span class="pl-c1">this</span>).<span class="pl-c1">createDocumentFragment</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">N</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>))<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>),b<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>).<span class="pl-c1">createDocumentFragment</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(a),b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">this</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-en">j</span>(c),<span class="pl-smi">c</span>.<span class="pl-c1">detach</span>(),a},<span class="pl-en">canSurroundContents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>),<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>);</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check if the contents can be surrounded. Specifically, this means whether the range partially selects</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> no non-text nodes.</span></td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">this</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_first</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_first</span>,<span class="pl-c1">this</span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_last</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_last</span>,<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">detach</span>(),<span class="pl-k">!</span>b},<span class="pl-en">surroundContents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">s</span>(a,ba),<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">canSurroundContents</span>())<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INVALID_STATE_ERR<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Extract the contents</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">extractContents</span>();</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clear the children of the node</span></td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">hasChildNodes</span>())<span class="pl-k">for</span>(;<span class="pl-smi">a</span>.<span class="pl-c1">lastChild</span>;)<span class="pl-smi">a</span>.<span class="pl-c1">removeChild</span>(<span class="pl-smi">a</span>.<span class="pl-c1">lastChild</span>);</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Insert the new node and add the extracted contents</span></td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line"><span class="pl-en">h</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>),<span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(b),<span class="pl-c1">this</span>.<span class="pl-c1">selectNode</span>(a)},<span class="pl-en">cloneRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">z</span>(<span class="pl-c1">this</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">I</span>(<span class="pl-en">d</span>(<span class="pl-c1">this</span>)),c<span class="pl-k">=</span><span class="pl-smi">ia</span>.<span class="pl-c1">length</span>;c<span class="pl-k">--</span>;)a<span class="pl-k">=</span>ia[c],b[a]<span class="pl-k">=</span><span class="pl-c1">this</span>[a];<span class="pl-k">return</span> b},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">z</span>(<span class="pl-c1">this</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>;<span class="pl-k">if</span>(a<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">N</span>(a))<span class="pl-k">return</span> <span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-c1">4</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">this</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-en">k</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Accept only text or CDATA nodes, not comments</span></td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span><span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-c1">data</span>)}),<span class="pl-smi">c</span>.<span class="pl-c1">detach</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The methods below are all non-standard. The following batch were introduced by Mozilla but have since</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> been removed from Mozilla.</span></td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line"><span class="pl-en">compareNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">z</span>(<span class="pl-c1">this</span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>,c<span class="pl-k">=</span><span class="pl-en">O</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NOT_FOUND_ERR<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">comparePoint</span>(b,c),e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">comparePoint</span>(b,c<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> d<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>e<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>pa<span class="pl-k">:</span>na<span class="pl-k">:</span>e<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>oa<span class="pl-k">:</span>qa},<span class="pl-en">comparePoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">w</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>HIERARCHY_REQUEST_ERR<span class="pl-pds">&quot;</span></span>),<span class="pl-en">u</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>),<span class="pl-en">R</span>(a,b,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>)<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">R</span>(a,b,<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>)<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>},createContextualFragment<span class="pl-k">:</span>ha,<span class="pl-en">toHtml</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">B</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> touchingIsIntersecting determines whether this method considers a node that borders a range intersects</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> with it (as in WebKit) or not (as in Gecko pre-1.9, and the default)</span></td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line"><span class="pl-en">intersectsNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">W</span>(a)<span class="pl-k">!=</span><span class="pl-en">e</span>(<span class="pl-c1">this</span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>,d<span class="pl-k">=</span><span class="pl-en">O</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">R</span>(c,d,<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>),g<span class="pl-k">=</span><span class="pl-en">R</span>(c,d<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>);<span class="pl-k">return</span> b<span class="pl-k">?</span>f<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&gt;</span><span class="pl-c1">0</span>},<span class="pl-en">isPointInRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-en">w</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>HIERARCHY_REQUEST_ERR<span class="pl-pds">&quot;</span></span>),<span class="pl-en">u</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>),<span class="pl-en">R</span>(a,b,<span class="pl-c1">this</span>.<span class="pl-smi">startContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startOffset</span>)<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">R</span>(a,b,<span class="pl-c1">this</span>.<span class="pl-smi">endContainer</span>,<span class="pl-c1">this</span>.<span class="pl-smi">endOffset</span>)<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>},</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The methods below are non-standard and invented by me.</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Sharing a boundary start-to-end or end-to-start does not count as intersection.</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-en">intersectsRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">i</span>(<span class="pl-c1">this</span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>)},</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Sharing a boundary start-to-end or end-to-start does count as intersection.</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line">intersectsOrTouchesRange:function(a){return i(this,a,!0)},intersection:function(a){if(this.intersectsRange(a)){var b=R(this.startContainer,this.startOffset,a.startContainer,a.startOffset),c=R(this.endContainer,this.endOffset,a.endContainer,a.endOffset),d=this.cloneRange();return b==-1&amp;&amp;d.setStart(a.startContainer,a.startOffset),1==c&amp;&amp;d.setEnd(a.endContainer,a.endOffset),d}return null},union:function(a){if(this.intersectsOrTouchesRange(a)){var b=this.cloneRange();return R(a.startContainer,a.startOffset,this.startContainer,this.startOffset)==-1&amp;&amp;b.setStart(a.startContainer,a.startOffset),1==R(a.endContainer,a.endOffset,this.endContainer,this.endOffset)&amp;&amp;b.setEnd(a.endContainer,a.endOffset),b}throw new M(&quot;Ranges do not intersect&quot;)},containsNode:function(a,b){return b?this.intersectsNode(a,!1):this.compareNode(a)==qa},containsNodeContents:function(a){return this.comparePoint(a,0)&gt;=0&amp;&amp;this.comparePoint(a,U(a))&lt;=0},containsRange:function(a){var b=this.intersection(a);return null!==b&amp;&amp;a.equals(b)},containsNodeText:function(a){var b=this.cloneRange();b.selectNode(a);var c=b.getNodes([3]);if(c.length&gt;0){b.setStart(c[0],0);var d=c.pop();return b.setEnd(d,d.length),this.containsRange(b)}return this.containsNodeContents(a)},getNodes:function(a,b){return z(this),n(this,a,b)},getDocument:function(){return d(this)},collapseBefore:function(a){this.setEndBefore(a),this.collapse(!1)},collapseAfter:function(a){this.setStartAfter(a),this.collapse(!0)},getBookmark:function(b){var c=d(this),e=a.createRange(c);b=b||J.getBody(c),e.selectNodeContents(b);var f=this.intersection(e),g=0,h=0;return f&amp;&amp;(e.setEnd(f.startContainer,f.startOffset),g=e.toString().length,h=g+f.toString().length),{start:g,end:h,containerNode:b}},moveToBookmark:function(a){var b=a.containerNode,c=0;this.setStart(b,0),this.collapse(!0);for(var d,e,f,g,h=[b],i=!1,j=!1;!j&amp;&amp;(d=h.pop());)if(3==d.nodeType)e=c+d.length,!i&amp;&amp;a.start&gt;=c&amp;&amp;a.start&lt;=e&amp;&amp;(this.setStart(d,a.start-c),i=!0),i&amp;&amp;a.end&gt;=c&amp;&amp;a.end&lt;=e&amp;&amp;(this.setEnd(d,a.end-c),j=!0),c=e;else for(g=d.childNodes,f=g.length;f--;)h.push(g[f])},getName:function(){return&quot;DomRange&quot;},equals:function(a){return I.rangesEqual(this,a)},isValid:function(){return y(this)},inspect:function(){return o(this)},detach:function(){}}),F(I,H),K.extend(I,{rangeProperties:ia,RangeIterator:p,copyComparisonConstants:D,createPrototypeRange:F,inspect:o,toHtml:B,getRangeDocument:d,rangesEqual:function(a,b){return a.startContainer===b.startContainer&amp;&amp;a.startOffset===b.startOffset&amp;&amp;a.endContainer===b.endContainer&amp;&amp;a.endOffset===b.endOffset}}),a.DomRange=I}),/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Wrappers for the browser&#39;s native DOM Range and/or TextRange implementation</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-en">createCoreModule</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WrappedRange<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>DomRange<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dom</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">util</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">DomPosition</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">DomRange</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">getBody</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">getContentDocument</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isCharacterDataNode</span>;<span class="pl-k">if</span>(<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">features</span>.<span class="pl-smi">implementsDomRange</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is a wrapper around the browser&#39;s native DOM Range. It has two aims:</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> - Provide workarounds for specific browser bugs</span></td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> - provide convenient extensions, which are inherited from Rangy&#39;s DomRange</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;c<span class="pl-k">--</span>;)b<span class="pl-k">=</span>m[c],a[b]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">nativeRange</span>[b];</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Fix for broken collapsed property in IE 9.</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">collapsed</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">endContainer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">startOffset</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">endOffset</span>}function g(a,b,c,d,e){var f=a.startContainer!==b||a.startOffset!=c,g=a.endContainer!==d||a.endOffset!=e,h=!a.equals(a.nativeRange);</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Always set both boundaries for the benefit of IE9 (see issue 35)</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">(f<span class="pl-k">||</span>g<span class="pl-k">||</span>h)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">setEnd</span>(d,e),<span class="pl-smi">a</span>.<span class="pl-c1">setStart</span>(b,c))}<span class="pl-k">var</span> k,l,m<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">rangeProperties</span>;<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">throw</span> <span class="pl-smi">b</span>.<span class="pl-en">createError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WrappedRange: Range must be specified<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span><span class="pl-k">=</span>a,<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">h</span>.<span class="pl-en">createPrototypeRange</span>(c,g),k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>,<span class="pl-smi">k</span>.<span class="pl-en">selectNode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">selectNode</span>(a),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">cloneContents</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">cloneContents</span>()},</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Due to a long-standing Firefox bug that I have not been able to find a reliable way to detect,</span></td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insertNode() is never delegated to the native range.</span></td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">surroundContents</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">surroundContents</span>(a),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">collapse</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">collapse</span>(a),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">cloneRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">cloneRange</span>())},<span class="pl-smi">k</span>.<span class="pl-en">refresh</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">toString</span>()};</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Create test range and node for feature detection</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>test<span class="pl-pds">&quot;</span></span>);<span class="pl-en">i</span>(<span class="pl-c1">document</span>).<span class="pl-c1">appendChild</span>(n);<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createRange</span>();<span class="pl-c">/*--------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test for Firefox 2 bug that prevents moving the start of a Range to a point after its current end and</span></td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> correct for it</span></td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-c1">setStart</span>(n,<span class="pl-c1">0</span>),<span class="pl-smi">o</span>.<span class="pl-c1">setEnd</span>(n,<span class="pl-c1">0</span>);<span class="pl-k">try</span>{<span class="pl-smi">o</span>.<span class="pl-c1">setStart</span>(n,<span class="pl-c1">1</span>),<span class="pl-smi">k</span>.<span class="pl-en">setStart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setStart</span>(a,b),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">setEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setEnd</span>(a,b),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>[a](b),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)}}}<span class="pl-k">catch</span>(a){<span class="pl-smi">k</span>.<span class="pl-en">setStart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">try</span>{<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setStart</span>(a,b)}<span class="pl-k">catch</span>(c){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setEnd</span>(a,b),<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setStart</span>(a,b)}<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">setEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">try</span>{<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setEnd</span>(a,b)}<span class="pl-k">catch</span>(c){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setStart</span>(a,b),<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">setEnd</span>(a,b)}<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">try</span>{<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>[a](c)}<span class="pl-k">catch</span>(d){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>[b](c),<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>[a](c)}<span class="pl-en">d</span>(<span class="pl-c1">this</span>)}}}<span class="pl-smi">k</span>.<span class="pl-smi">setStartBefore</span><span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>setStartBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setEndBefore<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">k</span>.<span class="pl-smi">setStartAfter</span><span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>setStartAfter<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setEndAfter<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">k</span>.<span class="pl-smi">setEndBefore</span><span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>setEndBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setStartBefore<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">k</span>.<span class="pl-smi">setEndAfter</span><span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>setEndAfter<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setStartAfter<span class="pl-pds">&quot;</span></span>),<span class="pl-c">/*--------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Always use DOM4-compliant selectNodeContents implementation: it&#39;s simpler and less code than testing</span></td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> whether the native implementation can be trusted</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">selectNodeContents</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">setStartAndEnd</span>(a,<span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-en">getNodeLength</span>(a))},<span class="pl-c">/*--------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test for and correct WebKit bug that has the behaviour of compareBoundaryPoints round the wrong way for</span></td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> constants START_TO_END and END_TO_START: https://bugs.webkit.org/show_bug.cgi?id=20738</span></td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">o</span>.<span class="pl-c1">selectNodeContents</span>(n),<span class="pl-smi">o</span>.<span class="pl-c1">setEnd</span>(n,<span class="pl-c1">3</span>);<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">p</span>.<span class="pl-c1">selectNodeContents</span>(n),<span class="pl-smi">p</span>.<span class="pl-c1">setEnd</span>(n,<span class="pl-c1">4</span>),<span class="pl-smi">p</span>.<span class="pl-c1">setStart</span>(n,<span class="pl-c1">2</span>),<span class="pl-smi">o</span>.<span class="pl-c1">compareBoundaryPoints</span>(<span class="pl-smi">o</span>.<span class="pl-c1">START_TO_END</span>,p)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">o</span>.<span class="pl-c1">compareBoundaryPoints</span>(<span class="pl-smi">o</span>.<span class="pl-c1">END_TO_START</span>,p)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is the wrong way round, so correct for it</span></td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">compareBoundaryPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">nativeRange</span><span class="pl-k">||</span>b,a<span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">START_TO_END</span><span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">END_TO_START</span><span class="pl-k">:</span>a<span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">END_TO_START</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">START_TO_END</span>),<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">compareBoundaryPoints</span>(a,b)}<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">compareBoundaryPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">compareBoundaryPoints</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">nativeRange</span><span class="pl-k">||</span>b)};<span class="pl-c">/*--------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test for IE deleteContents() and extractContents() bug and correct it. See issue 107.</span></td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>123<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">firstChild</span>,s<span class="pl-k">=</span><span class="pl-en">i</span>(<span class="pl-c1">document</span>);<span class="pl-smi">s</span>.<span class="pl-c1">appendChild</span>(q),<span class="pl-smi">o</span>.<span class="pl-c1">setStart</span>(r,<span class="pl-c1">1</span>),<span class="pl-smi">o</span>.<span class="pl-c1">setEnd</span>(r,<span class="pl-c1">2</span>),<span class="pl-smi">o</span>.<span class="pl-c1">deleteContents</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>13<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">r</span>.<span class="pl-c1">data</span><span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Behaviour is correct per DOM4 Range so wrap the browser&#39;s implementation of deleteContents() and</span></td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> extractContents()</span></td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">deleteContents</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">deleteContents</span>(),<span class="pl-en">d</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">k</span>.<span class="pl-en">extractContents</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">extractContents</span>();<span class="pl-k">return</span> <span class="pl-en">d</span>(<span class="pl-c1">this</span>),a}),<span class="pl-smi">s</span>.<span class="pl-c1">removeChild</span>(q),s<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c">/*--------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test for existence of createContextualFragment and delegate to it if it exists</span></td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">isHostMethod</span>(o,<span class="pl-s"><span class="pl-pds">&quot;</span>createContextualFragment<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-en">createContextualFragment</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">nativeRange</span>.<span class="pl-c1">createContextualFragment</span>(a)}),<span class="pl-c">/*--------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clean up</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-en">i</span>(<span class="pl-c1">document</span>).<span class="pl-c1">removeChild</span>(n),<span class="pl-smi">k</span>.<span class="pl-en">getName</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>WrappedRange<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">a</span>.<span class="pl-smi">WrappedRange</span><span class="pl-k">=</span>c,<span class="pl-smi">a</span>.<span class="pl-en">createNativeRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-en">j</span>(a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>createNativeRange<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>()}}(),<span class="pl-smi">a</span>.<span class="pl-smi">features</span>.<span class="pl-smi">implementsTextRange</span>){<span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            This is a workaround for a bug where IE returns the wrong container element from the TextRange&#39;s parentElement()</span></td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            method. For example, in the following (where pipes denote the selection boundaries):</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;ul id=&quot;ul&quot;&gt;&lt;li id=&quot;a&quot;&gt;| a &lt;/li&gt;&lt;li id=&quot;b&quot;&gt; b |&lt;/li&gt;&lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            var range = document.selection.createRange();</span></td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            alert(range.parentElement().id); // Should alert &quot;ul&quot; but alerts &quot;b&quot;</span></td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            This method returns the common ancestor node of the following:</span></td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            - the parentElement() of the textRange</span></td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            - the parentElement() of the textRange after calling collapse(true)</span></td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            - the parentElement() of the textRange after calling collapse(false)</span></td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            */</span></td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">parentElement</span>(),c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">duplicate</span>();<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">parentElement</span>();c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">duplicate</span>(),<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">parentElement</span>(),g<span class="pl-k">=</span>d<span class="pl-k">==</span>f<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-en">getCommonAncestor</span>(d,f);<span class="pl-k">return</span> g<span class="pl-k">==</span>b<span class="pl-k">?</span>g<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-en">getCommonAncestor</span>(b,g)},<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-en">compareEndPoints</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>StartToEnd<span class="pl-pds">&quot;</span></span>,a)},<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">duplicate</span>();<span class="pl-smi">h</span>.<span class="pl-c1">collapse</span>(c);<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">parentElement</span>();</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Deal with nodes that cannot &quot;contain rich HTML markup&quot;. In practice, this means form inputs, images and</span></td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> similar. See http://msdn.microsoft.com/en-us/library/aa703950%28VS.85%29.aspx</span></td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Sometimes collapsing a TextRange that&#39;s at the start of a text node can move it into the previous node, so</span></td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> check for that</span></td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">isOrIsAncestorOf</span>(b,i)<span class="pl-k">||</span>(i<span class="pl-k">=</span>b),<span class="pl-k">!</span><span class="pl-smi">i</span>.<span class="pl-smi">canHaveHTML</span>){<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">g</span>(<span class="pl-smi">i</span>.<span class="pl-c1">parentNode</span>,<span class="pl-smi">e</span>.<span class="pl-en">getNodeIndex</span>(i));<span class="pl-k">return</span>{boundaryPosition<span class="pl-k">:</span>j,nodeInfo<span class="pl-k">:</span>{nodeIndex<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">offset</span>,containerElement<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">node</span>}}}<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">getDocument</span>(i).<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Workaround for HTML5 Shiv&#39;s insane violation of document.createElement(). See Rangy issue 104 and HTML5</span></td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Shiv issue 64: https://github.com/aFarkas/html5shiv/issues/64</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">l</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">removeNode</span>(l);<span class="pl-k">for</span>(<span class="pl-k">var</span> m,n,o,p,q,r<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>StartToStart<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>StartToEnd<span class="pl-pds">&quot;</span></span>,s<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">containerElement</span><span class="pl-k">==</span>i<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">nodeIndex</span><span class="pl-k">:</span><span class="pl-c1">0</span>,t<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>,u<span class="pl-k">=</span>t,v<span class="pl-k">=</span>u;;){<span class="pl-k">if</span>(v<span class="pl-k">==</span>t<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">appendChild</span>(l)<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">insertBefore</span>(l,<span class="pl-smi">i</span>.<span class="pl-c1">childNodes</span>[v]),<span class="pl-smi">h</span>.<span class="pl-en">moveToElementText</span>(l),m<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">compareEndPoints</span>(r,a),<span class="pl-c1">0</span><span class="pl-k">==</span>m<span class="pl-k">||</span>s<span class="pl-k">==</span>u)<span class="pl-k">break</span>;<span class="pl-k">if</span>(m<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(u<span class="pl-k">==</span>s<span class="pl-k">+</span><span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We know the endth child node is after the range boundary, so we must be done.</span></td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;s<span class="pl-k">=</span>v}<span class="pl-k">else</span> u<span class="pl-k">=</span>u<span class="pl-k">==</span>s<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">?</span>s<span class="pl-k">:</span>v;v<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((s<span class="pl-k">+</span>u)<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-smi">i</span>.<span class="pl-c1">removeChild</span>(l)}<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We&#39;ve now reached or gone past the boundary of the text range we&#39;re interested in</span></td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> so have identified the node we want</span></td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line">q<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">nextSibling</span>,m<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&amp;&amp;</span><span class="pl-en">k</span>(q)){</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is a character data node (text, comment, cdata). The working range is collapsed at the start of</span></td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the node containing the text range&#39;s boundary, so we move the end of the working range to the</span></td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> boundary point and measure the length of its text to get the boundary&#39;s offset within the node.</span></td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-en">setEndPoint</span>(c<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>EndToStart<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>EndToEnd<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">var</span> w;<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\r\n</span>]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">q</span>.<span class="pl-c1">data</span>)){<span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        For the particular case of a boundary within a text node containing rendered line breaks (within a</span></td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        &lt;pre&gt; element, for example), we need a slightly complicated approach to get the boundary&#39;s offset in</span></td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        IE. The facts:</span></td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        - Each line break is represented as \r in the text node&#39;s data/nodeValue properties</span></td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        - Each line break is represented as \r\n in the TextRange&#39;s &#39;text&#39; property</span></td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        - The &#39;text&#39; property of the TextRange does not contain trailing line breaks</span></td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        To get round the problem presented by the final fact above, we can use the fact that TextRange&#39;s</span></td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        moveStart() and moveEnd() methods return the actual number of characters moved, which is not</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        necessarily the same as the number of characters it was instructed to move. The simplest approach is</span></td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        to use this to store the characters moved when moving both the start and end of the range to the</span></td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        start of the document body and subtracting the start offset from the end offset (the</span></td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        &quot;move-negative-gazillion&quot; method). However, this is extremely slow when the document is large and</span></td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        the range is near the end of it. Clearly doing the mirror image (i.e. moving the range boundaries to</span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        the end of the document) has the same problem.</span></td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        Another approach that works is to use moveStart() to move the start boundary of the range up to the</span></td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        end boundary one character at a time and incrementing a counter with the value returned by the</span></td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        moveStart() call. However, the check for whether the start boundary has reached the end boundary is</span></td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        expensive, so this method is slow (although unlike &quot;move-negative-gazillion&quot; is largely unaffected</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        by the location of the range within the document).</span></td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        The approach used below is a hybrid of the two methods above. It uses the fact that a string</span></td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        containing the TextRange&#39;s &#39;text&#39; property with each \r\n converted to a single \r character cannot</span></td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        be longer than the text of the TextRange, so the start of the range is moved that length initially</span></td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        and then a character at a time to make up for any trailing line breaks not contained in the &#39;text&#39;</span></td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        property. This has good performance in most situations compared to the previous two methods.</span></td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        */</span></td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">duplicate</span>(),y<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">text</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\r\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>;<span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-en">moveStart</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>character<span class="pl-pds">&quot;</span></span>,y);(m<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-en">compareEndPoints</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>StartToEnd<span class="pl-pds">&quot;</span></span>,x))<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>;)w<span class="pl-k">++</span>,<span class="pl-smi">x</span>.<span class="pl-en">moveStart</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>character<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>)}<span class="pl-k">else</span> w<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">text</span>.<span class="pl-c1">length</span>;p<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">g</span>(q,w)}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If the boundary immediately follows a character data node and this is the end boundary, we should favour</span></td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> a position within that, and likewise for a start boundary preceding a character data node</span></td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span>(d<span class="pl-k">||!</span>c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">previousSibling</span>,o<span class="pl-k">=</span>(d<span class="pl-k">||</span>c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">nextSibling</span>,p<span class="pl-k">=</span>o<span class="pl-k">&amp;&amp;</span><span class="pl-en">k</span>(o)<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">g</span>(o,<span class="pl-c1">0</span>)<span class="pl-k">:</span>n<span class="pl-k">&amp;&amp;</span><span class="pl-en">k</span>(n)<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">g</span>(n,<span class="pl-smi">n</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">g</span>(i,<span class="pl-smi">e</span>.<span class="pl-en">getNodeIndex</span>(l));</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clean up</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-en">removeNode</span>(l),{boundaryPosition<span class="pl-k">:</span>p,nodeInfo<span class="pl-k">:</span>{nodeIndex<span class="pl-k">:</span>v,containerElement<span class="pl-k">:</span>i}}},<span class="pl-en">o</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,f,g,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">offset</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">getDocument</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>),l<span class="pl-k">=</span><span class="pl-en">i</span>(j).<span class="pl-en">createTextRange</span>(),m<span class="pl-k">=</span><span class="pl-en">k</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>);</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Position the range immediately before the node containing the boundary</span></td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Making the working element non-empty element persuades IE to consider the TextRange boundary to be within</span></td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the element rather than immediately before or after it</span></td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> insertBefore is supposed to work like appendChild if the second parameter is null. However, a bug report</span></td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> for IERange suggests that it can crash the browser: http://code.google.com/p/ierange/issues/detail?id=12</span></td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clean up</span></td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Move the working range to the text offset, if required</span></td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> m<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>)<span class="pl-k">:</span>(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-c1">childNodes</span>,c<span class="pl-k">=</span>h<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>g[h]<span class="pl-k">:</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>),f<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">f</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#feff;<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">insertBefore</span>(f,c)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">appendChild</span>(f),<span class="pl-smi">l</span>.<span class="pl-en">moveToElementText</span>(f),<span class="pl-smi">l</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span>b),<span class="pl-smi">d</span>.<span class="pl-c1">removeChild</span>(f),m<span class="pl-k">&amp;&amp;</span>l[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>moveStart<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>moveEnd<span class="pl-pds">&quot;</span></span>](<span class="pl-s"><span class="pl-pds">&quot;</span>character<span class="pl-pds">&quot;</span></span>,h),l};<span class="pl-c">/*------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is a wrapper around a TextRange, providing full DOM Range functionality using rangy&#39;s DomRange as a</span></td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> prototype</span></td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">textRange</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-en">refresh</span>()},<span class="pl-smi">d</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">h</span>(<span class="pl-c1">document</span>),<span class="pl-smi">d</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">refresh</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b,c,d<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-c1">this</span>.<span class="pl-smi">textRange</span>);<span class="pl-en">m</span>(<span class="pl-c1">this</span>.<span class="pl-smi">textRange</span>)<span class="pl-k">?</span>b<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">textRange</span>,d,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-smi">boundaryPosition</span><span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">textRange</span>,d,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">boundaryPosition</span>,</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> An optimization used here is that if the start and end boundaries have the same parent element, the</span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> search scope for the end boundary can be limited to exclude the portion of the element that precedes</span></td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the start boundary</span></td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">textRange</span>,d,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-smi">nodeInfo</span>).<span class="pl-smi">boundaryPosition</span>),<span class="pl-c1">this</span>.<span class="pl-c1">setStart</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>,<span class="pl-smi">a</span>.<span class="pl-smi">offset</span>),<span class="pl-c1">this</span>.<span class="pl-c1">setEnd</span>(<span class="pl-smi">b</span>.<span class="pl-smi">node</span>,<span class="pl-smi">b</span>.<span class="pl-smi">offset</span>)},<span class="pl-smi">d</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getName</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>WrappedTextRange<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">h</span>.<span class="pl-en">copyComparisonConstants</span>(d);<span class="pl-k">var</span> <span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">collapsed</span>)<span class="pl-k">return</span> <span class="pl-en">o</span>(<span class="pl-k">new</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">startOffset</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-k">new</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">startOffset</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-k">new</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-smi">endContainer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">endOffset</span>),<span class="pl-k">!</span><span class="pl-c1">1</span>),d<span class="pl-k">=</span><span class="pl-en">i</span>(<span class="pl-smi">h</span>.<span class="pl-en">getRangeDocument</span>(a)).<span class="pl-en">createTextRange</span>();<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">setEndPoint</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>StartToStart<span class="pl-pds">&quot;</span></span>,b),<span class="pl-smi">d</span>.<span class="pl-en">setEndPoint</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EndToEnd<span class="pl-pds">&quot;</span></span>,c),d};</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> IE 9 and above have both implementations and Rangy makes both available. The next few lines sets which</span></td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> implementation to use by default.</span></td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">rangeToTextRange</span><span class="pl-k">=</span>p,<span class="pl-smi">d</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toTextRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">p</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">a</span>.<span class="pl-smi">WrappedTextRange</span><span class="pl-k">=</span>d,<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">features</span>.<span class="pl-smi">implementsDomRange</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">config</span>.<span class="pl-smi">preferTextRange</span>){</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add WrappedTextRange as the Range property of the global object to allow expression like Range.END_TO_END to work</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">q</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>return this;<span class="pl-pds">&quot;</span></span>)()}(<span class="pl-c1">Function</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">q</span>.<span class="pl-smi">Range</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">q</span>.<span class="pl-smi">Range</span><span class="pl-k">=</span>d),<span class="pl-smi">a</span>.<span class="pl-en">createNativeRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-en">j</span>(a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>createNativeRange<span class="pl-pds">&quot;</span></span>),<span class="pl-en">i</span>(a).<span class="pl-en">createTextRange</span>()},<span class="pl-smi">a</span>.<span class="pl-smi">WrappedRange</span><span class="pl-k">=</span>d}}<span class="pl-smi">a</span>.<span class="pl-en">createRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-en">j</span>(c,b,<span class="pl-s"><span class="pl-pds">&quot;</span>createRange<span class="pl-pds">&quot;</span></span>),<span class="pl-k">new</span> <span class="pl-en">a.WrappedRange</span>(<span class="pl-smi">a</span>.<span class="pl-en">createNativeRange</span>(c))},<span class="pl-smi">a</span>.<span class="pl-en">createRangyRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-en">j</span>(a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>createRangyRange<span class="pl-pds">&quot;</span></span>),<span class="pl-k">new</span> <span class="pl-en">h</span>(a)},<span class="pl-smi">f</span>.<span class="pl-en">createAliasForDeprecatedMethod</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>createIframeRange<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createRange<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">f</span>.<span class="pl-en">createAliasForDeprecatedMethod</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>createIframeRangyRange<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createRangyRange<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-en">addShimListener</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">document</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">c</span>.<span class="pl-smi">createRange</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">createRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>(c)}),c<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">null</span>})}),<span class="pl-c">/*----------------------------------------------------------------------------------------------------------------*/</span></td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This module creates a selection object wrapper that conforms as closely as possible to the Selection specification</span></td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in the HTML Editing spec (http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#selections)</span></td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-en">createCoreModule</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WrappedSelection<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>DomRange<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>WrappedRange<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Utility function to support direction parameters in the API that may be a string (&quot;backward&quot;, &quot;backwards&quot;,</span></td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;forward&quot; or &quot;forwards&quot;) or a Boolean (true for backwards).</span></td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line">function c(a){return&quot;string&quot;==typeof a?/^backward(s)?$/i.test(a):!!a}function d(a,c){if(a){if(C.isWindow(a))return a;if(a instanceof r)return a.win;var d=C.getContentDocument(a,b,c);return C.getWindow(d)}return window}function e(a){return d(a,&quot;getWinSelection&quot;).getSelection()}function f(a){return d(a,&quot;getDocSelection&quot;).document.selection}function g(a){var b=!1;return a.anchorNode&amp;&amp;(b=1==C.comparePoints(a.anchorNode,a.anchorOffset,a.focusNode,a.focusOffset)),b}function h(a,b,c){var d=c?&quot;end&quot;:&quot;start&quot;,e=c?&quot;start&quot;:&quot;end&quot;;a.anchorNode=b[d+&quot;Container&quot;],a.anchorOffset=b[d+&quot;Offset&quot;],a.focusNode=b[e+&quot;Container&quot;],a.focusOffset=b[e+&quot;Offset&quot;]}function i(a){var b=a.nativeSelection;a.anchorNode=b.anchorNode,a.anchorOffset=b.anchorOffset,a.focusNode=b.focusNode,a.focusOffset=b.focusOffset}function j(a){a.anchorNode=a.focusNode=null,a.anchorOffset=a.focusOffset=0,a.rangeCount=0,a.isCollapsed=!0,a._ranges.length=0}function k(b){var c;return b instanceof F?(c=a.createNativeRange(b.getDocument()),c.setEnd(b.endContainer,b.endOffset),c.setStart(b.startContainer,b.startOffset)):b instanceof G?c=b.nativeRange:J.implementsDomRange&amp;&amp;b instanceof C.getWindow(b.startContainer).Range&amp;&amp;(c=b),c}function l(a){if(!a.length||1!=a[0].nodeType)return!1;for(var b=1,c=a.length;b&lt;c;++b)if(!C.isAncestorOf(a[0],a[b]))return!1;return!0}function m(a){var c=a.getNodes();if(!l(c))throw b.createError(&quot;getSingleElementFromRange: range &quot;+a.inspect()+&quot; did not consist of a single element&quot;);return c[0]}</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Simple, quick test which only needs to distinguish between a TextRange and a ControlRange</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">n</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-c1">text</span>}function o(a,b){</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Create a Range from the selected TextRange</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(b);<span class="pl-smi">a</span>.<span class="pl-smi">_ranges</span><span class="pl-k">=</span>[c],<span class="pl-en">h</span>(a,c,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">collapsed</span>}function p(b){if(</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Update the wrapped selection based on what&#39;s now in the native selection</span></td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>None<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span>)<span class="pl-en">j</span>(b);<span class="pl-k">else</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">createRange</span>();<span class="pl-k">if</span>(<span class="pl-en">n</span>(c))</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This case (where the selection type is &quot;Control&quot; and calling createRange() on the selection returns</span></td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> a TextRange) can happen in IE 9. It happens, for example, when all elements in the selected</span></td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ControlRange have been removed from the ControlRange and removed from the document.</span></td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line"><span class="pl-en">o</span>(b,c);<span class="pl-k">else</span>{<span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-en">L</span>(<span class="pl-smi">c</span>.<span class="pl-c1">item</span>(<span class="pl-c1">0</span>)),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span>;<span class="pl-k">++</span>f)d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>(e),<span class="pl-smi">d</span>.<span class="pl-c1">selectNode</span>(<span class="pl-smi">c</span>.<span class="pl-c1">item</span>(f)),<span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>.<span class="pl-c1">push</span>(d);<span class="pl-smi">b</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>[<span class="pl-c1">0</span>].<span class="pl-smi">collapsed</span>,<span class="pl-en">h</span>(b,<span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>[<span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">-</span><span class="pl-c1">1</span>],<span class="pl-k">!</span><span class="pl-c1">1</span>)}}}function q(a,c){for(var d=a.docSelection.createRange(),e=m(c),f=L(d.item(0)),g=M(f).createControlRange(),h=0,i=d.length;h&lt;i;++h)g.add(d.item(h));try{g.add(e)}catch(a){throw b.createError(&quot;addRange(): Element within the specified Range could not be added to control selection (does it have layout?)&quot;)}g.select(),</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Update the wrapped selection based on what&#39;s now in the native selection</span></td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line"><span class="pl-en">p</span>(a)}function r(a,b,c){this.nativeSelection=a,this.docSelection=b,this._ranges=[],this.win=c,this.refresh()}function s(a){a.win=a.anchorNode=a.focusNode=a._ranges=null,a.rangeCount=a.anchorOffset=a.focusOffset=0,a.detached=!0}function t(a,b){for(var c,d,e=ba.length;e--;)if(c=ba[e],d=c.selection,&quot;deleteAll&quot;==b)s(d);else if(c.win==a)return&quot;delete&quot;==b?(ba.splice(e,1),!0):d;return&quot;deleteAll&quot;==b&amp;&amp;(ba.length=0),null}function u(a,c){for(var d,e=L(c[0].startContainer),f=M(e).createControlRange(),g=0,h=c.length;g&lt;h;++g){d=m(c[g]);try{f.add(d)}catch(a){throw b.createError(&quot;setRanges(): Element within one of the specified Ranges could not be added to control selection (does it have layout?)&quot;)}}f.select(),</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Update the wrapped selection based on what&#39;s now in the native selection</span></td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line">p(a)}function v(a,b){if(a.win.document!=L(b))throw new H(&quot;WRONG_DOCUMENT_ERR&quot;)}function w(b){return function(c,d){var e;this.rangeCount?(e=this.getRangeAt(0),e[&quot;set&quot;+(b?&quot;Start&quot;:&quot;End&quot;)](c,d)):(e=a.createRange(this.win.document),e.setStartAndEnd(c,d)),this.setSingleRange(e,this.isBackward())}}function x(a){var b=[],c=new I(a.anchorNode,a.anchorOffset),d=new I(a.focusNode,a.focusOffset),e=&quot;function&quot;==typeof a.getName?a.getName():&quot;Selection&quot;;if(&quot;undefined&quot;!=typeof a.rangeCount)for(var f=0,g=a.rangeCount;f&lt;g;++f)b[f]=F.inspect(a.getRangeAt(f));return&quot;[&quot;+e+&quot;(Ranges: &quot;+b.join(&quot;, &quot;)+&quot;)(anchor: &quot;+c.inspect()+&quot;, focus: &quot;+d.inspect()+&quot;]&quot;}a.config.checkSelectionRanges=!0;var y,z,A=&quot;boolean&quot;,B=&quot;number&quot;,C=a.dom,D=a.util,E=D.isHostMethod,F=a.DomRange,G=a.WrappedRange,H=a.DOMException,I=C.DomPosition,J=a.features,K=&quot;Control&quot;,L=C.getDocument,M=C.getBody,N=F.rangesEqual,O=E(window,&quot;getSelection&quot;),P=D.isHostObject(document,&quot;selection&quot;);J.implementsWinGetSelection=O,J.implementsDocSelection=P;var Q=P&amp;&amp;(!O||a.config.preferTextRange);if(Q)y=f,a.isSelectionValid=function(a){var b=d(a,&quot;isSelectionValid&quot;).document,c=b.selection;</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check whether the selection TextRange is actually contained within the correct document</span></td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>None<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-en">L</span>(<span class="pl-smi">c</span>.<span class="pl-c1">createRange</span>().<span class="pl-en">parentElement</span>())<span class="pl-k">==</span>b};<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">O</span>)<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Neither document.selection or window.getSelection() detected.<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-c1">1</span>;y<span class="pl-k">=</span>e,<span class="pl-smi">a</span>.<span class="pl-en">isSelectionValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}<span class="pl-smi">a</span>.<span class="pl-smi">getNativeSelection</span><span class="pl-k">=</span>y;<span class="pl-k">var</span> <span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-en">y</span>();</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> In Firefox, the selection is null in an iframe with display: none. See issue #138.</span></td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">R</span>)<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Native selection was null (possibly issue 138?)<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> <span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createNativeRange</span>(<span class="pl-c1">document</span>),<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-en">M</span>(<span class="pl-c1">document</span>),<span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-c1">D</span>.<span class="pl-en">areHostProperties</span>(<span class="pl-c1">R</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>anchorNode<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>focusNode<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>anchorOffset<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>focusOffset<span class="pl-pds">&quot;</span></span>]);<span class="pl-c1">J</span>.<span class="pl-smi">selectionHasAnchorAndFocus</span><span class="pl-k">=</span><span class="pl-c1">U</span>;</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test for existence of native selection extend() method</span></td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-c1">R</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>extend<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">J</span>.<span class="pl-smi">selectionHasExtend</span><span class="pl-k">=</span><span class="pl-c1">V</span>;</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test if rangeCount exists</span></td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-k">typeof</span> <span class="pl-c1">R</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">==</span><span class="pl-c1">B</span>;<span class="pl-c1">J</span>.<span class="pl-smi">selectionHasRangeCount</span><span class="pl-k">=</span><span class="pl-c1">W</span>;<span class="pl-k">var</span> <span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-c1">V</span><span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-en">getRangeDocument</span>(c),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>(d);<span class="pl-smi">e</span>.<span class="pl-en">collapseToPoint</span>(<span class="pl-smi">c</span>.<span class="pl-smi">endContainer</span>,<span class="pl-smi">c</span>.<span class="pl-smi">endOffset</span>),<span class="pl-smi">b</span>.<span class="pl-en">addRange</span>(<span class="pl-en">k</span>(e)),<span class="pl-smi">b</span>.<span class="pl-en">extend</span>(<span class="pl-smi">c</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">c</span>.<span class="pl-smi">startOffset</span>)}<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-c1">D</span>.<span class="pl-en">areHostMethods</span>(<span class="pl-c1">R</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>addRange<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getRangeAt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>removeAllRanges<span class="pl-pds">&quot;</span></span>])<span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-c1">R</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">==</span><span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">J</span>.<span class="pl-smi">implementsDomRange</span><span class="pl-k">&amp;&amp;!</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Previously an iframe was used but this caused problems in some circumstances in IE, so tests are</span></td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> performed on the current document&#39;s selection. See issue 109.</span></td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note also that if a selection previously existed, it is wiped and later restored by these tests. This</span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> will result in the selection direction begin reversed if the original selection was backwards and the</span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> browser does not support setting backwards selections (Internet Explorer, I&#39;m looking at you).</span></td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-c1">getSelection</span>();<span class="pl-k">if</span>(b){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span>,d<span class="pl-k">=</span>c<span class="pl-k">&gt;</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-en">g</span>(b),h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>h)e[h]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getRangeAt</span>(h);</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Create some test elements</span></td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-en">createTestElement</span>(<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),j<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>   <span class="pl-pds">&quot;</span></span>)),k<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createRange</span>();</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test whether the native selection is capable of supporting multiple ranges.</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">setStart</span>(j,<span class="pl-c1">1</span>),<span class="pl-smi">k</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-en">removeAllRanges</span>(),<span class="pl-smi">b</span>.<span class="pl-en">addRange</span>(k),<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span>,<span class="pl-smi">b</span>.<span class="pl-en">removeAllRanges</span>(),<span class="pl-k">!</span>d){</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Doing the original feature test here in Chrome 36 (and presumably later versions) prints a</span></td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> console error of &quot;Discontiguous selection is not supported.&quot; that cannot be suppressed. There&#39;s</span></td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing we can do about this while retaining the feature test so we have to resort to a browser</span></td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> sniff. I&#39;m not happy about it. See</span></td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> https://code.google.com/p/chromium/issues/detail?id=399791</span></td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">navigator</span>.<span class="pl-c1">appVersion</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>Chrome<span class="pl-cce">\/</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>) <span class="pl-pds">/</span></span>);<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">parseInt</span>(l[<span class="pl-c1">1</span>])<span class="pl-k">&gt;=</span><span class="pl-c1">36</span>)<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">cloneRange</span>();<span class="pl-smi">k</span>.<span class="pl-c1">setStart</span>(j,<span class="pl-c1">0</span>),<span class="pl-smi">m</span>.<span class="pl-c1">setEnd</span>(j,<span class="pl-c1">3</span>),<span class="pl-smi">m</span>.<span class="pl-c1">setStart</span>(j,<span class="pl-c1">2</span>),<span class="pl-smi">b</span>.<span class="pl-en">addRange</span>(k),<span class="pl-smi">b</span>.<span class="pl-en">addRange</span>(m),<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span>}}<span class="pl-k">for</span>(</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clean up</span></td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span>.<span class="pl-en">removeNode</span>(i),<span class="pl-smi">b</span>.<span class="pl-en">removeAllRanges</span>(),h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>h)<span class="pl-c1">0</span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">?</span><span class="pl-c1">Z</span><span class="pl-k">?</span><span class="pl-en">Z</span>(b,e[h])<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Rangy initialization: original selection was backwards but selection has been restored forwards because the browser does not support Selection.extend<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">b</span>.<span class="pl-en">addRange</span>(e[h]))<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">addRange</span>(e[h])}}(),<span class="pl-c1">J</span>.<span class="pl-smi">selectionSupportsMultipleRanges</span><span class="pl-k">=</span><span class="pl-c1">X</span>,<span class="pl-c1">J</span>.<span class="pl-smi">collapsedNonEditableSelectionsSupported</span><span class="pl-k">=</span><span class="pl-c1">Y</span>;</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ControlRanges</span></td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> $,_<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">T</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">E</span>(<span class="pl-c1">T</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>createControlRange<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>($<span class="pl-k">=</span><span class="pl-c1">T</span>.<span class="pl-en">createControlRange</span>(),<span class="pl-c1">D</span>.<span class="pl-en">areHostProperties</span>($,[<span class="pl-s"><span class="pl-pds">&quot;</span>item<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>add<span class="pl-pds">&quot;</span></span>])<span class="pl-k">&amp;&amp;</span>(_<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)),<span class="pl-c1">J</span>.<span class="pl-smi">implementsControlRange</span><span class="pl-k">=</span>_,</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Selection collapsedness</span></td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line">z<span class="pl-k">=</span><span class="pl-c1">U</span><span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">anchorNode</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">focusNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">anchorOffset</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">focusOffset</span>}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-smi">a</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">getRangeAt</span>(<span class="pl-smi">a</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">-</span><span class="pl-c1">1</span>).<span class="pl-smi">collapsed</span>};<span class="pl-k">var</span> aa;<span class="pl-en">E</span>(<span class="pl-c1">R</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getRangeAt<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> try/catch is present because getRangeAt() must have thrown an error in some browser and some situation.</span></td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Unfortunately, I didn&#39;t write a comment about the specifics and am now scared to take it out. Let that be a</span></td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> lesson to us all, especially me.</span></td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line"><span class="pl-en">aa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">getRangeAt</span>(b)}<span class="pl-k">catch</span>(a){<span class="pl-k">return</span> <span class="pl-c1">null</span>}}<span class="pl-k">:</span><span class="pl-c1">U</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">aa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">L</span>(<span class="pl-smi">b</span>.<span class="pl-smi">anchorNode</span>),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>(c);</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Handle the case when the selection was selected backwards (from the end to the start in the</span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> document)</span></td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">setStartAndEnd</span>(<span class="pl-smi">b</span>.<span class="pl-smi">anchorNode</span>,<span class="pl-smi">b</span>.<span class="pl-smi">anchorOffset</span>,<span class="pl-smi">b</span>.<span class="pl-smi">focusNode</span>,<span class="pl-smi">b</span>.<span class="pl-smi">focusOffset</span>),<span class="pl-smi">d</span>.<span class="pl-smi">collapsed</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">setStartAndEnd</span>(<span class="pl-smi">b</span>.<span class="pl-smi">focusNode</span>,<span class="pl-smi">b</span>.<span class="pl-smi">focusOffset</span>,<span class="pl-smi">b</span>.<span class="pl-smi">anchorNode</span>,<span class="pl-smi">b</span>.<span class="pl-smi">anchorOffset</span>),d}),<span class="pl-smi">r</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">selectionPrototype</span>;<span class="pl-k">var</span> ba<span class="pl-k">=</span>[],<span class="pl-en">ca</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check if the parameter is a Rangy Selection object</span></td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span>a <span class="pl-k">instanceof</span> r)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">refresh</span>(),a;a<span class="pl-k">=</span><span class="pl-en">d</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>getNativeSelection<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">t</span>(a),c<span class="pl-k">=</span><span class="pl-en">y</span>(a),e<span class="pl-k">=</span><span class="pl-c1">P</span><span class="pl-k">?</span><span class="pl-en">f</span>(a)<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> b<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-smi">nativeSelection</span><span class="pl-k">=</span>c,<span class="pl-smi">b</span>.<span class="pl-smi">docSelection</span><span class="pl-k">=</span>e,<span class="pl-smi">b</span>.<span class="pl-en">refresh</span>())<span class="pl-k">:</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">r</span>(c,e,a),<span class="pl-smi">ba</span>.<span class="pl-c1">push</span>({win<span class="pl-k">:</span>a,selection<span class="pl-k">:</span>b})),b};<span class="pl-smi">a</span>.<span class="pl-smi">getSelection</span><span class="pl-k">=</span>ca,<span class="pl-c1">D</span>.<span class="pl-en">createAliasForDeprecatedMethod</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>getIframeSelection<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getSelection<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> da<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">prototype</span>;</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Selecting a range</span></td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">Q</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>.<span class="pl-en">areHostMethods</span>(<span class="pl-c1">R</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>removeAllRanges<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>addRange<span class="pl-pds">&quot;</span></span>])){<span class="pl-smi">da</span>.<span class="pl-en">removeAllRanges</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">nativeSelection</span>.<span class="pl-en">removeAllRanges</span>(),<span class="pl-en">j</span>(<span class="pl-c1">this</span>)};<span class="pl-k">var</span> <span class="pl-en">ea</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">Z</span>(<span class="pl-smi">a</span>.<span class="pl-smi">nativeSelection</span>,b),<span class="pl-smi">a</span>.<span class="pl-en">refresh</span>()};<span class="pl-c1">W</span><span class="pl-k">?</span><span class="pl-smi">da</span>.<span class="pl-en">addRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(_<span class="pl-k">&amp;&amp;</span><span class="pl-c1">P</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span>)<span class="pl-en">q</span>(<span class="pl-c1">this</span>,b);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">c</span>(d)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">V</span>)<span class="pl-en">ea</span>(<span class="pl-c1">this</span>,b);<span class="pl-k">else</span>{<span class="pl-k">var</span> e;<span class="pl-c1">X</span><span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-en">removeAllRanges</span>(),e<span class="pl-k">=</span><span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clone the native range so that changing the selected range does not affect the selection.</span></td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is contrary to the spec but is the only way to achieve consistency between browsers. See</span></td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> issue 80.</span></td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">k</span>(b).<span class="pl-c1">cloneRange</span>();<span class="pl-k">try</span>{<span class="pl-c1">this</span>.<span class="pl-smi">nativeSelection</span>.<span class="pl-en">addRange</span>(f)}<span class="pl-k">catch</span>(a){}<span class="pl-k">if</span>(</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check whether adding the range was successful</span></td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nativeSelection</span>.<span class="pl-smi">rangeCount</span>,<span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">==</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>){</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The range was added successfully</span></td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check whether the range that we added to the selection is reflected in the last range extracted from</span></td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the selection</span></td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">config</span>.<span class="pl-smi">checkSelectionRanges</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">aa</span>(<span class="pl-c1">this</span>.<span class="pl-smi">nativeSelection</span>,<span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">-</span><span class="pl-c1">1</span>);g<span class="pl-k">&amp;&amp;!</span><span class="pl-en">N</span>(g,b)<span class="pl-k">&amp;&amp;</span>(</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Happens in WebKit with, for example, a selection placed at the start of a text node</span></td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(g))}<span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[<span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>b,<span class="pl-en">h</span>(<span class="pl-c1">this</span>,b,<span class="pl-en">ha</span>(<span class="pl-c1">this</span>.<span class="pl-smi">nativeSelection</span>)),<span class="pl-c1">this</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-en">z</span>(<span class="pl-c1">this</span>)}<span class="pl-k">else</span></td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The range was not added successfully. The simplest thing is to refresh</span></td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">refresh</span>()}}<span class="pl-k">:</span><span class="pl-smi">da</span>.<span class="pl-en">addRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">c</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">V</span><span class="pl-k">?</span><span class="pl-en">ea</span>(<span class="pl-c1">this</span>,a)<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">nativeSelection</span>.<span class="pl-en">addRange</span>(<span class="pl-en">k</span>(a)),<span class="pl-c1">this</span>.<span class="pl-en">refresh</span>())},<span class="pl-smi">da</span>.<span class="pl-en">setRanges</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(_<span class="pl-k">&amp;&amp;</span><span class="pl-c1">P</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-en">u</span>(<span class="pl-c1">this</span>,a);<span class="pl-k">else</span>{<span class="pl-c1">this</span>.<span class="pl-en">removeAllRanges</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)<span class="pl-c1">this</span>.<span class="pl-en">addRange</span>(a[b])}}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-en">E</span>(<span class="pl-c1">R</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>empty<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">E</span>(<span class="pl-c1">S</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>_<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Q</span>))<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>No means of selecting a Range or TextRange was found<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">da</span>.<span class="pl-en">removeAllRanges</span><span class="pl-k">=</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Added try/catch as fix for issue #21</span></td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check for empty() not working (issue #24)</span></td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-en">empty</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>None<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span>){</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Work around failure to empty a control selection by instead selecting a TextRange and then</span></td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> calling empty()</span></td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">anchorNode</span>)a<span class="pl-k">=</span><span class="pl-en">L</span>(<span class="pl-c1">this</span>.<span class="pl-smi">anchorNode</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">L</span>(<span class="pl-smi">b</span>.<span class="pl-c1">item</span>(<span class="pl-c1">0</span>)))}<span class="pl-k">if</span>(a){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">M</span>(a).<span class="pl-en">createTextRange</span>();<span class="pl-smi">c</span>.<span class="pl-c1">select</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-en">empty</span>()}}}<span class="pl-k">catch</span>(a){}<span class="pl-en">j</span>(<span class="pl-c1">this</span>)},<span class="pl-smi">da</span>.<span class="pl-en">addRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span><span class="pl-k">?</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>,b)<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">WrappedTextRange</span>.<span class="pl-en">rangeToTextRange</span>(b).<span class="pl-c1">select</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span>b,<span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[<span class="pl-c1">0</span>].<span class="pl-smi">collapsed</span>,<span class="pl-en">h</span>(<span class="pl-c1">this</span>,b,<span class="pl-k">!</span><span class="pl-c1">1</span>))},<span class="pl-smi">da</span>.<span class="pl-en">setRanges</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">removeAllRanges</span>();<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-en">u</span>(<span class="pl-c1">this</span>,a)<span class="pl-k">:</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addRange</span>(a[<span class="pl-c1">0</span>])}}<span class="pl-smi">da</span>.<span class="pl-en">getRangeAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">H</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INDEX_SIZE_ERR<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clone the range to preserve selection-range independence. See issue 80.</span></td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[a].<span class="pl-c1">cloneRange</span>()};<span class="pl-k">var</span> fa;<span class="pl-k">if</span>(<span class="pl-c1">Q</span>)<span class="pl-en">fa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-smi">a</span>.<span class="pl-en">isSelectionValid</span>(<span class="pl-smi">b</span>.<span class="pl-smi">win</span>)<span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">createRange</span>()<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-en">M</span>(<span class="pl-smi">b</span>.<span class="pl-smi">win</span>.<span class="pl-smi">document</span>).<span class="pl-en">createTextRange</span>(),<span class="pl-smi">c</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)),<span class="pl-smi">b</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span><span class="pl-k">?</span><span class="pl-en">p</span>(b)<span class="pl-k">:</span><span class="pl-en">n</span>(c)<span class="pl-k">?</span><span class="pl-en">o</span>(b,c)<span class="pl-k">:</span><span class="pl-en">j</span>(b)};<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">E</span>(<span class="pl-c1">R</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getRangeAt<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-c1">R</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">==</span><span class="pl-c1">B</span>)<span class="pl-en">fa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(_<span class="pl-k">&amp;&amp;</span><span class="pl-c1">P</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span>)<span class="pl-en">p</span>(b);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">nativeSelection</span>.<span class="pl-smi">rangeCount</span>,<span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span>;c<span class="pl-k">&lt;</span>d;<span class="pl-k">++</span>c)<span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>[c]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.WrappedRange</span>(<span class="pl-smi">b</span>.<span class="pl-smi">nativeSelection</span>.<span class="pl-en">getRangeAt</span>(c));<span class="pl-en">h</span>(b,<span class="pl-smi">b</span>.<span class="pl-smi">_ranges</span>[<span class="pl-smi">b</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">-</span><span class="pl-c1">1</span>],<span class="pl-en">ha</span>(<span class="pl-smi">b</span>.<span class="pl-smi">nativeSelection</span>)),<span class="pl-smi">b</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-en">z</span>(b)}<span class="pl-k">else</span> <span class="pl-en">j</span>(b)};<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">U</span><span class="pl-k">||</span><span class="pl-k">typeof</span> <span class="pl-c1">R</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">!=</span><span class="pl-c1">A</span><span class="pl-k">||</span><span class="pl-k">typeof</span> <span class="pl-c1">S</span>.<span class="pl-smi">collapsed</span><span class="pl-k">!=</span><span class="pl-c1">A</span><span class="pl-k">||!</span><span class="pl-c1">J</span>.<span class="pl-smi">implementsDomRange</span>)<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">fail</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>No means of obtaining a Range or TextRange from the user&#39;s selection was found<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-en">fa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">nativeSelection</span>;<span class="pl-smi">c</span>.<span class="pl-smi">anchorNode</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-en">aa</span>(c,<span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-smi">_ranges</span><span class="pl-k">=</span>[b],<span class="pl-smi">a</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-en">i</span>(a),<span class="pl-smi">a</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-en">z</span>(a))<span class="pl-k">:</span><span class="pl-en">j</span>(a)}}<span class="pl-smi">da</span>.<span class="pl-en">refresh</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">anchorNode</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">anchorOffset</span>;<span class="pl-k">if</span>(<span class="pl-en">fa</span>(<span class="pl-c1">this</span>),a){</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check the range count first</span></td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(e<span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Now check the direction. Checking the anchor position is the same is enough since we&#39;re checking all the</span></td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ranges after this</span></td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">anchorNode</span><span class="pl-k">!=</span>c<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">anchorOffset</span><span class="pl-k">!=</span>d)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Finally, compare each range in turn</span></td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(;e<span class="pl-k">--</span>;)<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">N</span>(b[e],<span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[e]))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}};</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Removal of a single range</span></td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">ga</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getAllRanges</span>();<span class="pl-smi">a</span>.<span class="pl-en">removeAllRanges</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>d)<span class="pl-en">N</span>(b,c[d])<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">addRange</span>(c[d]);<span class="pl-smi">a</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">||</span><span class="pl-en">j</span>(a)};_<span class="pl-k">&amp;&amp;</span><span class="pl-c1">P</span><span class="pl-k">?</span><span class="pl-smi">da</span>.<span class="pl-en">removeRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">createRange</span>(),d<span class="pl-k">=</span><span class="pl-en">m</span>(a),e<span class="pl-k">=</span><span class="pl-en">L</span>(<span class="pl-smi">c</span>.<span class="pl-c1">item</span>(<span class="pl-c1">0</span>)),f<span class="pl-k">=</span><span class="pl-en">M</span>(e).<span class="pl-en">createControlRange</span>(),g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>i;<span class="pl-k">++</span>h)b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">item</span>(h),b<span class="pl-k">!==</span>d<span class="pl-k">||</span>g<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">add</span>(<span class="pl-smi">c</span>.<span class="pl-c1">item</span>(h))<span class="pl-k">:</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-c1">select</span>(),</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Update the wrapped selection based on what&#39;s now in the native selection</span></td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line"><span class="pl-en">p</span>(<span class="pl-c1">this</span>)}<span class="pl-k">else</span> <span class="pl-en">ga</span>(<span class="pl-c1">this</span>,a)}<span class="pl-k">:</span><span class="pl-smi">da</span>.<span class="pl-en">removeRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">ga</span>(<span class="pl-c1">this</span>,a)};</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Detecting if a selection is backward</span></td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ha;<span class="pl-k">!</span><span class="pl-c1">Q</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">J</span>.<span class="pl-smi">implementsDomRange</span><span class="pl-k">?</span>(ha<span class="pl-k">=</span>g,<span class="pl-smi">da</span>.<span class="pl-en">isBackward</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">ha</span>(<span class="pl-c1">this</span>)})<span class="pl-k">:</span>ha<span class="pl-k">=</span><span class="pl-smi">da</span>.<span class="pl-en">isBackward</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Create an alias for backwards compatibility. From 1.3, everything is &quot;backward&quot; rather than &quot;backwards&quot;</span></td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">da</span>.<span class="pl-smi">isBackwards</span><span class="pl-k">=</span><span class="pl-smi">da</span>.<span class="pl-smi">isBackward</span>,</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Selection stringifier</span></td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> This is conformant to the old HTML5 selections draft spec but differs from WebKit and Mozilla&#39;s implementation.</span></td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The current spec does not yet define this method.</span></td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">da</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)a[b]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[b];<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},</td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> No current browser conforms fully to the spec for this method, so Rangy&#39;s own method is always used</span></td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">da</span>.<span class="pl-en">collapse</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">v</span>(<span class="pl-c1">this</span>,b);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>(b);<span class="pl-smi">d</span>.<span class="pl-en">collapseToPoint</span>(b,c),<span class="pl-c1">this</span>.<span class="pl-en">setSingleRange</span>(d),<span class="pl-c1">this</span>.<span class="pl-smi">isCollapsed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-smi">da</span>.<span class="pl-en">collapseToStart</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">H</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INVALID_STATE_ERR<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-c1">collapse</span>(<span class="pl-smi">a</span>.<span class="pl-smi">startContainer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">startOffset</span>)},<span class="pl-smi">da</span>.<span class="pl-en">collapseToEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">H</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>INVALID_STATE_ERR<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>[<span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span><span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-c1">collapse</span>(<span class="pl-smi">a</span>.<span class="pl-smi">endContainer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">endOffset</span>)},</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The spec is very specific on how selectAllChildren should be implemented and not all browsers implement it as</span></td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> specified so the native implementation is never used by Rangy.</span></td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">da</span>.<span class="pl-en">selectAllChildren</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">v</span>(<span class="pl-c1">this</span>,b);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">createRange</span>(b);<span class="pl-smi">c</span>.<span class="pl-c1">selectNodeContents</span>(b),<span class="pl-c1">this</span>.<span class="pl-en">setSingleRange</span>(c)},<span class="pl-smi">da</span>.<span class="pl-en">deleteFromDocument</span><span class="pl-k">=</span><span class="pl-k">function</span>(){</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Sepcial behaviour required for IE&#39;s control selections</span></td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(_<span class="pl-k">&amp;&amp;</span><span class="pl-c1">P</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-c1">K</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">docSelection</span>.<span class="pl-c1">createRange</span>();<span class="pl-smi">b</span>.<span class="pl-c1">length</span>;)a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">item</span>(<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-c1">remove</span>(a),<span class="pl-c1">C</span>.<span class="pl-en">removeNode</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">refresh</span>()}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">rangeCount</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getAllRanges</span>();<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span>){<span class="pl-c1">this</span>.<span class="pl-en">removeAllRanges</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>d)c[d].<span class="pl-c1">deleteContents</span>();</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The spec says nothing about what the selection should contain after calling deleteContents on each</span></td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> range. Firefox moves the selection to where the final selected range was, so we emulate that</span></td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">addRange</span>(c[e<span class="pl-k">-</span><span class="pl-c1">1</span>])}}},</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The following are non-standard extensions</span></td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">da</span>.<span class="pl-en">eachRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_ranges</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;<span class="pl-k">++</span>c)<span class="pl-k">if</span>(<span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-en">getRangeAt</span>(c)))<span class="pl-k">return</span> b},<span class="pl-smi">da</span>.<span class="pl-en">getAllRanges</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">eachRange</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b)}),a},<span class="pl-smi">da</span>.<span class="pl-en">setSingleRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">removeAllRanges</span>(),<span class="pl-c1">this</span>.<span class="pl-en">addRange</span>(a,b)},<span class="pl-smi">da</span>.<span class="pl-en">callMethodOnEachRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[];<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">eachRange</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(d[a].<span class="pl-c1">apply</span>(d,b<span class="pl-k">||</span>[]))}),c},<span class="pl-smi">da</span>.<span class="pl-smi">setStart</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">da</span>.<span class="pl-smi">setEnd</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add select() method to Range prototype. Any existing selection will be removed.</span></td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">a.rangePrototype.select=function(a){ca(this.getDocument()).setSingleRange(this,a)},da.changeEachRange=function(a){var b=[],c=this.isBackward();this.eachRange(function(c){a(c),b.push(c)}),this.removeAllRanges(),c&amp;&amp;1==b.length?this.addRange(b[0],&quot;backward&quot;):this.setRanges(b)},da.containsNode=function(a,b){return this.eachRange(function(c){return c.containsNode(a,b)},!0)||!1},da.getBookmark=function(a){return{backward:this.isBackward(),rangeBookmarks:this.callMethodOnEachRange(&quot;getBookmark&quot;,[a])}},da.moveToBookmark=function(b){for(var c,d,e=[],f=0;c=b.rangeBookmarks[f++];)d=a.createRange(this.win),d.moveToBookmark(c),e.push(d);b.backward?this.setSingleRange(e[0],&quot;backward&quot;):this.setRanges(e)},da.saveRanges=function(){return{backward:this.isBackward(),ranges:this.callMethodOnEachRange(&quot;cloneRange&quot;)}},da.restoreRanges=function(a){this.removeAllRanges();for(var b,c=0;b=a.ranges[c];++c)this.addRange(b,a.backward&amp;&amp;0==c)},da.toHtml=function(){var a=[];return this.eachRange(function(b){a.push(F.toHtml(b))}),a.join(&quot;&quot;)},J.implementsTextRange&amp;&amp;(da.getNativeTextRange=function(){var c;if(c=this.docSelection){var d=c.createRange();if(n(d))return d;throw b.createError(&quot;getNativeTextRange: selection is a control selection&quot;)}if(this.rangeCount&gt;0)return a.WrappedTextRange.rangeToTextRange(this.getRangeAt(0));throw b.createError(&quot;getNativeTextRange: selection contains no range&quot;)}),da.getName=function(){return&quot;WrappedSelection&quot;},da.inspect=function(){return x(this)},da.detach=function(){t(this.win,&quot;delete&quot;),s(this)},r.detachAll=function(){t(null,&quot;deleteAll&quot;)},r.inspect=x,r.isDirectionBackward=c,a.Selection=r,a.selectionPrototype=da,a.addShimListener(function(a){&quot;undefined&quot;==typeof a.getSelection&amp;&amp;(a.getSelection=function(){return ca(a)}),a=null})});/*----------------------------------------------------------------------------------------------------------------*/</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Wait for document to load before initializing</span></td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">N</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">M</span><span class="pl-k">||</span>(<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">H</span>.<span class="pl-smi">initialized</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">H</span>.<span class="pl-smi">config</span>.<span class="pl-smi">autoInitialize</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>())};</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Test whether the document has already been loaded and initialize immediately if so</span></td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add a fallback in case the DOMContentLoaded event isn&#39;t supported</span></td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-c1">document</span>.<span class="pl-c1">readyState</span><span class="pl-k">?</span><span class="pl-en">N</span>()<span class="pl-k">:</span>(<span class="pl-en">a</span>(<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>addEventListener<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">document</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DOMContentLoaded<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">N</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-en">J</span>(<span class="pl-c1">window</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">N</span>))),<span class="pl-c1">H</span>},<span class="pl-c1">this</span>),<span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Selection save and restore module for Rangy.</span></td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Saves and restores user selections using marker invisible elements in the DOM.</span></td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Part of Rangy, a cross-browser JavaScript range and selection library</span></td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * https://github.com/timdown/rangy</span></td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Depends on Rangy core.</span></td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Copyright 2015, Tim Down</span></td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license.</span></td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Version: 1.3.0</span></td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Build date: 10 May 2015</span></td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> AMD. Register as an anonymous module with a dependency on Rangy.</span></td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line"><span class="pl-en">define</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>./rangy-core<span class="pl-pds">&quot;</span></span>],a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Node/CommonJS style</span></td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rangy<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> No AMD or CommonJS support so we use the rangy property of root (probably the global variable)</span></td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line"><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">rangy</span>)}(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">createModule</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SaveRestore<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>WrappedRange<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>(b<span class="pl-k">||</span><span class="pl-c1">document</span>).<span class="pl-c1">getElementById</span>(a)}function d(a,b){var c,d=&quot;selectionBoundary_&quot;+ +new Date+&quot;_&quot;+(&quot;&quot;+Math.random()).slice(2),e=o.getDocument(a.startContainer),f=a.cloneRange();</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Create the marker element containing a single invisible character using DOM methods and insert it</span></td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">collapse</span>(b),c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">c</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>d,<span class="pl-smi">c</span>.<span class="pl-c1">style</span>.<span class="pl-c1">lineHeight</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rangySelectionBoundary<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">e</span>.<span class="pl-c1">createTextNode</span>(r)),<span class="pl-smi">f</span>.<span class="pl-c1">insertNode</span>(c),c}function e(a,d,e,f){var g=c(e,a);g?(d[f?&quot;setStartBefore&quot;:&quot;setEndBefore&quot;](g),p(g)):b.warn(&quot;Marker element has been removed. Cannot restore selection.&quot;)}function f(a,b){return b.compareBoundaryPoints(a.START_TO_START,a)}function g(b,c){var e,f,g=a.DomRange.getRangeDocument(b),h=b.toString(),i=q(c);return b.collapsed?(f=d(b,!1),{document:g,markerId:f.id,collapsed:!0}):(f=d(b,!1),e=d(b,!0),{document:g,startMarkerId:e.id,endMarkerId:f.id,collapsed:!1,backward:i,toString:function(){return&quot;original text: &#39;&quot;+h+&quot;&#39;, new text: &#39;&quot;+b.toString()+&quot;&#39;&quot;}})}function h(d,f){var g=d.document;&quot;undefined&quot;==typeof f&amp;&amp;(f=!0);var h=a.createRange(g);if(d.collapsed){var i=c(d.markerId,g);if(i){i.style.display=&quot;inline&quot;;var j=i.previousSibling;</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Workaround for issue 17</span></td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&amp;&amp;</span><span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-smi">j</span>.<span class="pl-c1">nodeType</span><span class="pl-k">?</span>(<span class="pl-en">p</span>(i),<span class="pl-smi">h</span>.<span class="pl-en">collapseToPoint</span>(j,<span class="pl-smi">j</span>.<span class="pl-c1">length</span>))<span class="pl-k">:</span>(<span class="pl-smi">h</span>.<span class="pl-en">collapseBefore</span>(i),<span class="pl-en">p</span>(i))}<span class="pl-k">else</span> <span class="pl-smi">b</span>.<span class="pl-en">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Marker element has been removed. Cannot restore selection.<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span> <span class="pl-en">e</span>(g,h,<span class="pl-smi">d</span>.<span class="pl-smi">startMarkerId</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">e</span>(g,h,<span class="pl-smi">d</span>.<span class="pl-smi">endMarkerId</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">normalizeBoundaries</span>(),h}function i(b,d){var e,h,i=[],j=q(d);</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Order the ranges by position within the DOM, latest first, cloning the array to leave the original untouched</span></td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-c1">sort</span>(f);<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>l;<span class="pl-k">++</span>k)i[k]<span class="pl-k">=</span><span class="pl-en">g</span>(b[k],j);</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Now that all the markers are in place and DOM manipulation over, adjust each range&#39;s boundaries to lie</span></td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> between its markers</span></td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(k<span class="pl-k">=</span>l<span class="pl-k">-</span><span class="pl-c1">1</span>;k<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;<span class="pl-k">--</span>k)e<span class="pl-k">=</span>b[k],h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">DomRange</span>.<span class="pl-en">getRangeDocument</span>(e),<span class="pl-smi">e</span>.<span class="pl-smi">collapsed</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">collapseAfter</span>(<span class="pl-en">c</span>(i[k].<span class="pl-smi">markerId</span>,h))<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">setEndBefore</span>(<span class="pl-en">c</span>(i[k].<span class="pl-smi">endMarkerId</span>,h)),<span class="pl-smi">e</span>.<span class="pl-c1">setStartAfter</span>(<span class="pl-en">c</span>(i[k].<span class="pl-smi">startMarkerId</span>,h)));<span class="pl-k">return</span> i}function j(c){if(!a.isSelectionValid(c))return b.warn(&quot;Cannot save selection. This usually happens when the selection is collapsed and the selection document has lost focus.&quot;),null;var d=a.getSelection(c),e=d.getAllRanges(),f=1==e.length&amp;&amp;d.isBackward(),g=i(e,f);</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Ensure current selection is unaffected</span></td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> f<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">setSingleRange</span>(e[<span class="pl-c1">0</span>],f)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">setRanges</span>(e),{win<span class="pl-k">:</span>c,rangeInfos<span class="pl-k">:</span>g,restored<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}function k(a){for(var b=[],c=a.length,d=c-1;d&gt;=0;d--)b[d]=h(a[d],!0);return b}function l(b,c){if(!b.restored){var d=b.rangeInfos,e=a.getSelection(b.win),f=k(d),g=d.length;1==g&amp;&amp;c&amp;&amp;a.features.selectionHasExtend&amp;&amp;d[0].backward?(e.removeAllRanges(),e.addRange(f[0],!0)):e.setRanges(f),b.restored=!0}}function m(a,b){var d=c(b,a);d&amp;&amp;p(d)}function n(a){for(var b,c=a.rangeInfos,d=0,e=c.length;d&lt;e;++d)b=c[d],b.collapsed?m(a.doc,b.markerId):(m(a.doc,b.startMarkerId),m(a.doc,b.endMarkerId))}var o=a.dom,p=o.removeNode,q=a.Selection.isDirectionBackward,r=&quot;\ufeff&quot;;a.util.extend(a,{saveRange:g,restoreRange:h,saveRanges:i,restoreRanges:k,saveSelection:j,restoreSelection:l,removeMarkerElement:m,removeMarkers:n})}),a},this);</td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="container site-footer-container">
  <div class="site-footer " role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2017 <span title="0.23968s from github-fe-8320e0c.cp1-iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



  

  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha256-X+Q/xqnlEgxCczSjjpp2AUGGgqM5gcBzhRQ0p+EAUEk=" src="https://assets-cdn.github.com/assets/frameworks-5fe43fc6a9e5120c427334a38e9a7601418682a33981c073851434a7e1005049.js"></script>
    <script async="async" crossorigin="anonymous" integrity="sha256-9juSBU/6LfdytN4FT9IaLZ+xufYSqHkBZRUgHcrSaCw=" src="https://assets-cdn.github.com/assets/github-f63b92054ffa2df772b4de054fd21a2d9fb1b9f612a879016515201dcad2682c.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

